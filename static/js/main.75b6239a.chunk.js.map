{"version":3,"sources":["util/blockType.js","components/Gameboard.js","components/Plane.js","util/gameStatus.js","ui/BlockUI.js","ui/GameboardUI.js","App.js","reportWebVitals.js","index.js"],"names":["blockType","HEAD","BODY","NOT_DEFINED","HIT","AIR","Gameboard","blocks","planes","i","boardSize","row","j","push","x","y","type","selectedPlane","updateBoard","getBlocks","forEach","b","plane","pb","tmpblocks","br","block","addPlane","success","outOfPlane","collision","getPlanes","rotate","eachPlane","eachpb","otherPlane","otherpb","length","hit","hitx","hity","parseInt","moveSelectedPlane","xorg","yorg","xdest","ydest","xdelta","ydelta","movable","undefined","everyPlane","epb","move","moveOrigin","selectPlane","newSelectedPlane","getSelectedPlane","Plane","head","dead","getHead","headHit","blockLine","splice","getDead","gameStatus","selecting","moving","movingout","movingin","dropped","hitting","locked","hideen","BlockUI","props","blocktype","visible","className","style","border","margin","width","height","data-x","data-y","GameboardUI","gameBoard","state","status","gameBoardGrid","plane1","plane2","plane3","clicks","clickdelay","prevProps","this","setState","e","target","dataset","setTimeout","bind","mouseClick","forceUpdate","destx","desty","position","display","gridTemplateRows","gridTemplateColumns","map","onMouseDown","mouseDown","onMouseLeave","mouseLeave","onMouseOver","mouseEnter","onMouseUp","mouseUp","uniqid","Component","App","useState","board1Status","setBoard1Status","hidden","board2Status","role","marginLeft","marginRight","onClick","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75b6239a.chunk.js","sourcesContent":["const blockType = {\n  HEAD: \"H\",\n  BODY: \"B\",\n  NOT_DEFINED: \"_\",\n  HIT: \"X\",\n  AIR: \" \",\n};\n\nexport default blockType;\n","import blockType from \"../util/blockType\";\n\nconst Gameboard = () => {\n  const boardSize = 10;\n  let blocks = [];\n  let planes = [];\n\n  for (let i = boardSize - 1; i >= 0; i--) {\n    let row = [];\n    for (let j = 0; j < boardSize; j++) {\n      row.push({ x: j, y: i, type: blockType.NOT_DEFINED });\n    }\n    blocks.push(row);\n  }\n\n  const addPlane = (plane) => {\n    let success = true;\n    let outOfPlane = false;\n    plane.getBlocks().forEach((pb) => {\n      if (\n        pb.x < 0 ||\n        pb.x > boardSize - 1 ||\n        pb.y < 0 ||\n        pb.y > boardSize - 1\n      ) {\n        if (pb.type === blockType.HEAD || pb.type === blockType.BODY) {\n          outOfPlane = true;\n          success = false;\n        }\n      }\n    });\n\n    let collision = false;\n    getBlocks().forEach((b) => {\n      plane.getBlocks().forEach((pb) => {\n        if (b.x === pb.x && b.y === pb.y) {\n          if (\n            (b.type === blockType.HEAD || b.type === blockType.BODY) &&\n            (pb.type === blockType.HEAD || pb.type === blockType.BODY)\n          ) {\n            collision = true;\n            success = false;\n          }\n        }\n      });\n    });\n\n    if (outOfPlane === false && collision === false) {\n      planes.push(plane);\n      updateBoard();\n    }\n\n    return success;\n  };\n\n  const updateBoard = () => {\n    getBlocks().forEach((b) => {\n      if (b.type !== blockType.HIT) b.type = blockType.NOT_DEFINED;\n    });\n    planes.forEach((plane) => {\n      getBlocks().forEach((b) => {\n        plane.getBlocks().forEach((pb) => {\n          if (b.x === pb.x && b.y === pb.y) {\n            if (\n              pb.type === blockType.HEAD ||\n              pb.type === blockType.BODY ||\n              pb.type === blockType.HIT\n            )\n              b.type = pb.type;\n          }\n        });\n      });\n    });\n  };\n\n  let moveOrigin = { x: 0, y: 0 };\n\n  let selectedPlane;\n\n  const selectPlane = ({ x: xorg, y: yorg }) => {\n    let newSelectedPlane;\n    planes.forEach((plane) => {\n      plane.getBlocks().forEach((pb) => {\n        if (pb.x === parseInt(xorg) && pb.y === parseInt(yorg))\n          newSelectedPlane = plane;\n      });\n    });\n\n    if (newSelectedPlane !== selectedPlane && newSelectedPlane !== undefined) {\n      selectedPlane = newSelectedPlane;\n    }\n  };\n\n  const moveSelectedPlane = ({ x: xorg, y: yorg }, { x: xdest, y: ydest }) => {\n    let xdelta = xdest - xorg;\n    let ydelta = ydest - yorg;\n\n    let movable = true;\n\n    if (selectedPlane !== undefined) {\n      selectedPlane.getBlocks().forEach((pb) => {\n        if (\n          (pb.x + xdelta < 0 ||\n            pb.x + xdelta > blocks.length - 1 ||\n            pb.y + ydelta < 0 ||\n            pb.y + ydelta > blocks.length - 1) &&\n          (pb.type === blockType.BODY || pb.type === blockType.HEAD)\n        ) {\n          movable = false;\n        }\n      });\n\n      planes.forEach((everyPlane) => {\n        if (everyPlane !== selectedPlane) {\n          everyPlane.getBlocks().forEach((epb) => {\n            selectedPlane.getBlocks().forEach((pb) => {\n              if (\n                (epb.type === blockType.HEAD || epb.type === blockType.BODY) &&\n                (pb.type === blockType.HEAD || pb.type === blockType.BODY)\n              ) {\n                if (epb.x === pb.x + xdelta && epb.y === pb.y + ydelta)\n                  movable = false;\n              }\n            });\n          });\n        }\n      });\n\n      if (movable) {\n        getBlocks().forEach((b) => {\n          selectedPlane.getBlocks().forEach((pb) => {\n            if (b.x === pb.x && b.y === pb.y) b.type = blockType.NOT_DEFINED;\n          });\n        });\n\n        selectedPlane.move(xdelta, ydelta);\n        updateBoard();\n      }\n    }\n  };\n\n  const rotate = (plane) => {\n    plane.rotate();\n\n    planes.forEach((eachPlane) => {\n      eachPlane.getBlocks().forEach((eachpb) => {\n        planes.forEach((otherPlane) => {\n          if (eachPlane != otherPlane)\n            otherPlane.getBlocks().forEach((otherpb) => {\n              if (\n                eachpb.x == otherpb.x &&\n                eachpb.y == otherpb.y &&\n                ((eachpb.type == blockType.BODY &&\n                  otherpb.type == blockType.BODY) ||\n                  (eachpb.type == blockType.HEAD &&\n                    otherpb.type == blockType.HEAD) ||\n                  (eachpb.type == blockType.HEAD &&\n                    otherpb.type == blockType.BODY) ||\n                  (eachpb.type == blockType.BODY &&\n                    otherpb.type == blockType.HEAD))\n              ) {\n                plane.rotate();\n                plane.rotate();\n                plane.rotate();\n              }\n            });\n        });\n      });\n    });\n\n    plane.getBlocks().forEach((pb) => {\n      if (\n        (pb.x < 0 ||\n          pb.x > blocks.length - 1 ||\n          pb.y < 0 ||\n          pb.y > blocks.length - 1) &&\n        (pb.type === blockType.BODY || pb.type === blockType.HEAD)\n      ) {\n        plane.rotate();\n        plane.rotate();\n        plane.rotate();\n      }\n    });\n\n    updateBoard();\n  };\n\n  const getBlocks = () => {\n    let tmpblocks = [];\n\n    blocks.forEach((br) => {\n      br.forEach((block) => {\n        tmpblocks.push(block);\n      });\n    });\n\n    return [...tmpblocks];\n  };\n\n  const getPlanes = () => {\n    return planes;\n  };\n\n  const getSelectedPlane = () => {\n    return selectedPlane;\n  };\n  const hit = ({ x: hitx, y: hity }) => {\n    planes.forEach((plane) => {\n      plane.hit({ x: hitx, y: hity });\n    });\n\n    getBlocks().forEach((b) => {\n      if (b.x === parseInt(hitx) && b.y === parseInt(hity)) {\n        b.type = blockType.HIT;\n      }\n    });\n\n    updateBoard();\n  };\n\n  return {\n    boardSize,\n    getBlocks,\n    addPlane,\n    getPlanes,\n    rotate,\n    hit,\n    moveSelectedPlane,\n    moveOrigin,\n    selectPlane,\n    getSelectedPlane,\n  };\n};\n\nexport default Gameboard;\n","import blockType from \"../util/blockType\";\n\nconst Plane = ({ x: headx, y: heady }) => {\n  let head = { x: headx, y: heady };\n  let dead = false;\n\n  let blocks = [\n    [\n      { x: head.x - 1, y: head.y, type: blockType.NOT_DEFINED },\n      { x: head.x, y: head.y, type: blockType.HEAD },\n      { x: head.x + 1, y: head.y, type: blockType.NOT_DEFINED },\n      { x: head.x + 2, y: head.y, type: blockType.NOT_DEFINED },\n    ],\n    [\n      { x: head.x - 1, y: head.y + 1, type: blockType.BODY },\n      { x: head.x, y: head.y + 1, type: blockType.BODY },\n      { x: head.x + 1, y: head.y + 1, type: blockType.BODY },\n      { x: head.x + 2, y: head.y + 1, type: blockType.NOT_DEFINED },\n    ],\n    [\n      { x: head.x - 1, y: head.y + 2, type: blockType.NOT_DEFINED },\n      { x: head.x, y: head.y + 2, type: blockType.BODY },\n      { x: head.x + 1, y: head.y + 2, type: blockType.NOT_DEFINED },\n      { x: head.x + 2, y: head.y + 2, type: blockType.NOT_DEFINED },\n    ],\n    [\n      { x: head.x - 1, y: head.y + 3, type: blockType.BODY },\n      { x: head.x, y: head.y + 3, type: blockType.BODY },\n      { x: head.x + 1, y: head.y + 3, type: blockType.BODY },\n      { x: head.x + 2, y: head.y + 3, type: blockType.NOT_DEFINED },\n    ],\n  ];\n\n  const hit = ({ x: hitx, y: hity }) => {\n    dead = true;\n\n    let headHit = false;\n    if (parseInt(hitx) == head.x && parseInt(hity) == head.y) headHit = true;\n\n    blocks.forEach((blockLine) => {\n      blockLine.forEach((block) => {\n        if (\n          block.x === parseInt(hitx) &&\n          block.y === parseInt(hity) &&\n          (block.type === blockType.BODY || block.type === blockType.HEAD)\n        ) {\n          block.type = blockType.HIT;\n        }\n        if (headHit && block.type === blockType.BODY)\n          block.type = blockType.HIT;\n\n        if (block.type === blockType.HEAD || block.type === blockType.BODY)\n          dead = false;\n      });\n    });\n  };\n\n  const rotate = () => {\n    let tmpblocks = [\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n    ];\n\n    for (let i = 0; i < blocks.length; i++) {\n      for (let j = 0; j < blocks.length; j++) {\n        tmpblocks[i][j].x = blocks[i][j].x;\n        tmpblocks[i][j].y = blocks[i][j].y;\n        tmpblocks[i][j].type = blocks[blocks.length - j - 1][i].type;\n        if (tmpblocks[i][j].type === blockType.HEAD) {\n          head = { x: tmpblocks[i][j].x, y: tmpblocks[i][j].y };\n        }\n      }\n    }\n\n    blocks.splice(0, blocks.length, ...tmpblocks);\n  };\n\n  const move = (xdelta, ydelta) => {\n    let tmpblocks = [\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n    ];\n\n    for (let i = 0; i < blocks.length; i++) {\n      for (let j = 0; j < blocks.length; j++) {\n        tmpblocks[i][j].x = blocks[i][j].x + parseInt(xdelta);\n        tmpblocks[i][j].y = blocks[i][j].y + parseInt(ydelta);\n        tmpblocks[i][j].type = blocks[i][j].type;\n      }\n    }\n\n    blocks.splice(0, blocks.length, ...tmpblocks);\n  };\n\n  const getDead = () => {\n    return dead;\n  };\n\n  const getHead = () => {\n    return head;\n  };\n\n  const getBlocks = () => {\n    let tmpblocks = [];\n\n    blocks.forEach((br) => {\n      br.forEach((block) => {\n        tmpblocks.push(block);\n      });\n    });\n\n    return [...tmpblocks];\n  };\n  return { getHead, getBlocks, hit, rotate, getDead, blockType, move };\n};\n\nexport default Plane;\n","const gameStatus = {\n  selecting: 1,\n  moving: 2,\n  movingout: 3,\n  movingin: 4,\n  dropped: 5,\n  hitting: 6,\n  locked: 7,\n  hideen: 8,\n};\n\nexport default gameStatus;\n","import gameStatus from \"../util/gameStatus\";\n\nfunction BlockUI(props) {\n  let blocktype = \"\";\n  let block = props.block;\n  switch (props.block.type) {\n    case \"H\":\n      blocktype = \"btn-primary\";\n      break;\n    case \"B\":\n      blocktype = \"btn-secondary\";\n      break;\n    case \"_\":\n      blocktype = \"btn-light\";\n      break;\n    case \"X\":\n      blocktype = \"btn-danger\";\n      break;\n    default:\n      break;\n  }\n\n  if (props.visible === false) blocktype = \"btn-light\";\n\n  return (\n    <div\n      className={`${blocktype} ${block.x} ${block.y}`}\n      style={{\n        border: \"1px solid darkgrey\",\n        margin: \"0px\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      data-x={block.x}\n      data-y={block.y}\n    ></div>\n  );\n}\n\nexport default BlockUI;\n","import Gameboard from \"../components/Gameboard\";\nimport Plane from \"../components/Plane\";\nimport BlockUI from \"./BlockUI\";\nimport uniqid from \"uniqid\";\nimport { Component } from \"react\";\nimport gameStatus from \"../util/gameStatus\";\n\nclass GameboardUI extends Component {\n  constructor(props) {\n    super(props);\n    this.gameBoard = Gameboard();\n    this.state = {\n      status: props.gameStatus,\n      visible: props.visible,\n      gameBoardGrid: this.gameBoard.getBlocks(),\n    };\n\n    const plane1 = Plane({ x: 2, y: 2 });\n    this.addPlane(plane1);\n\n    const plane2 = Plane({ x: 5, y: 5 });\n    this.addPlane(plane2);\n\n    const plane3 = Plane({ x: 7, y: 1 });\n    this.addPlane(plane3);\n\n    this.clicks = 0;\n    this.clickdelay = 400;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.gameStatus !== this.props.gameStatus) {\n      this.setState({ status: this.props.gameStatus });\n    }\n  }\n\n  addPlane = (plane) => {\n    this.gameBoard.addPlane(plane);\n  };\n\n  mouseClick(e) {\n    this.gameBoard.hit({\n      x: e.target.dataset.x,\n      y: e.target.dataset.y,\n    });\n    this.setState({ gameBoardGrid: this.gameBoard.getBlocks() });\n  }\n\n  mouseDown(e) {\n    if (\n      this.state.status === gameStatus.selecting ||\n      this.state.status === gameStatus.dropped\n    ) {\n      this.clicks++;\n      setTimeout(\n        function () {\n          this.clicks = 0;\n        }.bind(this),\n        this.clickdelay\n      );\n\n      if (this.clicks === 2) {\n        this.gameBoard.selectPlane({\n          x: e.target.dataset.x,\n          y: e.target.dataset.y,\n        });\n\n        this.gameBoard.rotate(this.gameBoard.getSelectedPlane());\n        this.setState({ gameBoardGrid: this.gameBoard.getBlocks() });\n        this.clicks = 0;\n        return;\n      } else {\n        this.setState({ status: gameStatus.moving });\n        this.gameBoard.selectPlane({\n          x: e.target.dataset.x,\n          y: e.target.dataset.y,\n        });\n        this.gameBoard.moveOrigin = {\n          x: e.target.dataset.x,\n          y: e.target.dataset.y,\n        };\n      }\n    }\n    if (this.state.status === gameStatus.hitting) this.mouseClick(e);\n  }\n\n  mouseLeave(e) {\n    if (\n      this.state.status === gameStatus.moving ||\n      this.state.status === gameStatus.movingin\n    ) {\n      if (e.target.dataset.x !== null && e.target.dataset.y !== null) {\n        this.setState({ status: gameStatus.movingout });\n\n        this.gameBoard.moveOrigin = {\n          x: e.target.dataset.x,\n          y: e.target.dataset.y,\n        };\n      }\n      this.forceUpdate();\n    }\n  }\n\n  mouseEnter(e) {\n    if (this.state.status === gameStatus.movingout) {\n      if (e.target.dataset.x != null && e.target.dataset.y != null) {\n        let destx = e.target.dataset.x;\n        let desty = e.target.dataset.y;\n\n        this.gameBoard.moveSelectedPlane(this.gameBoard.moveOrigin, {\n          x: destx,\n          y: desty,\n        });\n      }\n\n      this.setState({ gameBoardGrid: this.gameBoard.getBlocks() });\n      this.setState({ status: gameStatus.movingin });\n      this.forceUpdate();\n    }\n  }\n\n  mouseUp(e) {\n    if (this.state.status !== gameStatus.hitting) {\n      this.setState({ status: gameStatus.dropped });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div\n            className=\"card\"\n            style={{\n              width: \"240px\",\n              height: \"240px\",\n            }}\n          >\n            <div\n              className=\"card-body\"\n              style={{\n                position: \"relative\",\n                display: \"grid\",\n                gridTemplateRows: \"repeat(10, 20px)\",\n                gridTemplateColumns: \"repeat(10, 20px)\",\n              }}\n            >\n              {this.state.gameBoardGrid.map((block) => {\n                return (\n                  <div\n                    className=\"box\"\n                    key={uniqid()}\n                    onMouseDown={this.mouseDown.bind(this)}\n                    onMouseLeave={this.mouseLeave.bind(this)}\n                    onMouseOver={this.mouseEnter.bind(this)}\n                    onMouseUp={this.mouseUp.bind(this)}\n                  >\n                    <BlockUI block={block} visible={this.state.visible} />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameboardUI;\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport GameboardUI from \"./ui/GameboardUI\";\nimport gameStatus from \"./util/gameStatus\";\n\nfunction App() {\n  let [board1Status, setBoard1Status] = useState(gameStatus.selecting);\n  let [board2Status, setBoard2Status] = useState(gameStatus.hidden);\n\n  let onPlayClick = () => {\n    console.log(\"hitting status\");\n    setBoard1Status(gameStatus.hitting);\n  };\n\n  return (\n    <div>\n      <div className=\"card\" style={{ width: \"100%\" }}>\n        <div className=\"card-body\">\n          {board1Status == gameStatus.selecting && (\n            <div\n              className=\"alert alert-info\"\n              role=\"alert\"\n              style={{ width: \"50%\", marginLeft: \"25%\", marginRight: \"25%\" }}\n            >\n              Place the planes!\n            </div>\n          )}\n          <GameboardUI gameStatus={board1Status} visible={true}></GameboardUI>\n          <GameboardUI gameStatus={board2Status} visible={false}></GameboardUI>\n          <button type=\"button\" className=\"btn btn-dark\" onClick={onPlayClick}>\n            Play!\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}