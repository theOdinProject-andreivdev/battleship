{"version":3,"sources":["util/blockType.js","components/Gameboard.js","components/Plane.js","ui/BlockUI.js","util/gameStatus.js","util/drawBlocks.js","ui/GameboardUI.js","App.js","reportWebVitals.js","index.js"],"names":["blockType","HEAD","BODY","NOT_DEFINED","HIT","AIR","Gameboard","blocks","planes","i","boardSize","row","j","push","x","y","type","addPlane","plane","success","outOfPlane","getBlocks","forEach","pbr","pb","collision","br","b","updateBoard","removePlane","pl","length","head","splice","getPlanes","rotate","hit","hitx","hity","parseInt","movePlane","selectedPlane","xorg","yorg","xdest","ydest","xdelta","ydelta","movable","undefined","move","Plane","dead","headHit","blockLine","block","tmpblocks","getDead","BlockUI","props","blocktype","className","style","width","height","border","margin","data-x","data-y","gameStatus","selecting","moving","movingout","movingin","dropped","drawBlocks","GameboardUI","console","log","gameBoard","state","status","gameBoardGrid","moveOrigin","plane1","plane2","e","preventDefault","button","this","setState","forceUpdate","target","dataset","destx","desty","map","onClick","onBlockClick","bind","onMouseDown","mouseDown","onMouseLeave","mouseLeave","onMouseOver","mouseEnter","onMouseUp","mouseUp","uniqid","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f7b91f4.chunk.js","sourcesContent":["const blockType = {\n  HEAD: \"H\",\n  BODY: \"B\",\n  NOT_DEFINED: \"_\",\n  HIT: \"X\",\n  AIR: \" \",\n};\n\nexport default blockType;\n","import blockType from \"../util/blockType\";\n\nconst Gameboard = () => {\n  const boardSize = 10;\n  let blocks = [];\n  let planes = [];\n\n  for (let i = boardSize - 1; i >= 0; i--) {\n    let row = [];\n    for (let j = 0; j < boardSize; j++) {\n      row.push({ x: j, y: i, type: blockType.NOT_DEFINED });\n    }\n    blocks.push(row);\n  }\n\n  const addPlane = (plane) => {\n    let success = true;\n    let outOfPlane = false;\n    plane.getBlocks().forEach((pbr) => {\n      pbr.forEach((pb) => {\n        if (\n          pb.x < 0 ||\n          pb.x > boardSize - 1 ||\n          pb.y < 0 ||\n          pb.y > boardSize - 1\n        ) {\n          if (pb.type === blockType.HEAD || pb.type === blockType.BODY) {\n            outOfPlane = true;\n            success = false;\n          }\n        }\n      });\n    });\n\n    let collision = false;\n    blocks.forEach((br) => {\n      br.forEach((b) => {\n        plane.getBlocks().forEach((pbr) => {\n          pbr.forEach((pb) => {\n            if (b.x === pb.x && b.y === pb.y) {\n              if (\n                (b.type === blockType.HEAD || b.type === blockType.BODY) &&\n                (pb.type === blockType.HEAD || pb.type === blockType.BODY)\n              ) {\n                collision = true;\n                success = false;\n              }\n            }\n          });\n        });\n      });\n    });\n\n    if (outOfPlane === false && collision === false) {\n      planes.push(plane);\n      updateBoard();\n    }\n\n    return success;\n  };\n\n  const updateBoard = () => {\n    planes.forEach((plane) => {\n      blocks.forEach((br) => {\n        br.forEach((b) => {\n          plane.getBlocks().forEach((pbr) => {\n            pbr.forEach((pb) => {\n              if (b.x === pb.x && b.y === pb.y) {\n                if (\n                  pb.type === blockType.HEAD ||\n                  pb.type === blockType.BODY ||\n                  pb.type === blockType.HIT\n                )\n                  b.type = pb.type;\n              }\n            });\n          });\n        });\n      });\n    });\n  };\n\n  const removePlane = (plane) => {\n    planes.forEach((pl) => {\n      if (pl === plane) {\n        blocks.forEach((br) => {\n          br.forEach((b) => {\n            pl.getBlocks().forEach((pbr) => {\n              pbr.forEach((pb) => {\n                if (b.x === pb.x && b.y === pb.y) {\n                  if (\n                    (b.type === blockType.BODY || b.type === blockType.HEAD) &&\n                    (pb.type === blockType.BODY || pb.type === blockType.HEAD)\n                  ) {\n                    pb = null;\n                    b.type = blockType.NOT_DEFINED;\n                  }\n                }\n              });\n            });\n          });\n        });\n      }\n    });\n\n    for (let i = 0; i < planes.length; i++) {\n      if (planes[i].head === plane.head) planes.splice(i, 1);\n    }\n  };\n\n  const movePlane = ({ x: xorg, y: yorg }, { x: xdest, y: ydest }) => {\n    let xdelta = xdest - xorg;\n    let ydelta = ydest - yorg;\n\n    let selectedPlane;\n    let movable = true;\n\n    planes.forEach((plane) => {\n      plane.getBlocks().forEach((pbr) => {\n        pbr.forEach((pb) => {\n          if (pb.x === parseInt(xorg) && pb.y === parseInt(yorg))\n            selectedPlane = plane;\n        });\n      });\n    });\n\n    if (selectedPlane !== undefined) {\n      selectedPlane.getBlocks().forEach((pbr) => {\n        pbr.forEach((pb) => {\n          if (\n            (pb.x + xdelta < 0 ||\n              pb.x + xdelta > blocks.length - 1 ||\n              pb.y + ydelta < 0 ||\n              pb.y + ydelta > blocks.length - 1) &&\n            (pb.type === blockType.BODY || pb.type === blockType.HEAD)\n          ) {\n            movable = false;\n          }\n        });\n      });\n\n      if (movable) {\n        blocks.forEach((br) => {\n          br.forEach((b) => {\n            selectedPlane.getBlocks().forEach((pbr) => {\n              pbr.forEach((pb) => {\n                if (b.x === pb.x && b.y === pb.y)\n                  b.type = blockType.NOT_DEFINED;\n              });\n            });\n          });\n        });\n\n        selectedPlane.move(xdelta, ydelta);\n        updateBoard();\n      }\n    }\n  };\n\n  const rotate = (plane) => {\n    removePlane(plane);\n    plane.rotate();\n    let success = addPlane(plane);\n    return success;\n  };\n\n  const getBlocks = () => {\n    return [...blocks];\n  };\n\n  const getPlanes = () => {\n    return planes;\n  };\n\n  const hit = ({ x: hitx, y: hity }) => {\n    planes.forEach((plane) => {\n      plane.hit({ x: hitx, y: hity });\n    });\n\n    blocks.forEach((br) => {\n      br.forEach((b) => {\n        if (b.x === parseInt(hitx) && b.y === parseInt(hity)) {\n          b.type = blockType.HIT;\n        }\n      });\n    });\n\n    updateBoard();\n  };\n\n  return {\n    boardSize,\n    getBlocks,\n    addPlane,\n    removePlane,\n    getPlanes,\n    rotate,\n    hit,\n    movePlane,\n  };\n};\n\nexport default Gameboard;\n","import blockType from \"../util/blockType\";\n\nconst Plane = ({ x: headx, y: heady }) => {\n  let head = { x: headx, y: heady };\n  let dead = false;\n\n  let blocks = [\n    [\n      { x: head.x - 1, y: head.y, type: blockType.NOT_DEFINED },\n      { x: head.x, y: head.y, type: blockType.HEAD },\n      { x: head.x + 1, y: head.y, type: blockType.NOT_DEFINED },\n      { x: head.x + 2, y: head.y, type: blockType.NOT_DEFINED },\n    ],\n    [\n      { x: head.x - 1, y: head.y + 1, type: blockType.BODY },\n      { x: head.x, y: head.y + 1, type: blockType.BODY },\n      { x: head.x + 1, y: head.y + 1, type: blockType.BODY },\n      { x: head.x + 2, y: head.y + 1, type: blockType.NOT_DEFINED },\n    ],\n    [\n      { x: head.x - 1, y: head.y + 2, type: blockType.NOT_DEFINED },\n      { x: head.x, y: head.y + 2, type: blockType.BODY },\n      { x: head.x + 1, y: head.y + 2, type: blockType.NOT_DEFINED },\n      { x: head.x + 2, y: head.y + 2, type: blockType.NOT_DEFINED },\n    ],\n    [\n      { x: head.x - 1, y: head.y + 3, type: blockType.BODY },\n      { x: head.x, y: head.y + 3, type: blockType.BODY },\n      { x: head.x + 1, y: head.y + 3, type: blockType.BODY },\n      { x: head.x + 2, y: head.y + 3, type: blockType.NOT_DEFINED },\n    ],\n  ];\n\n  const hit = ({ x: hitx, y: hity }) => {\n    dead = true;\n\n    let headHit = false;\n    if (hitx == head.x && hity == head.y) headHit = true;\n\n    blocks.forEach((blockLine) => {\n      blockLine.forEach((block) => {\n        if (block.x == hitx && block.y == hity) {\n          block.type = blockType.HIT;\n        }\n        if (headHit && block.type !== blockType.NOT_DEFINED)\n          block.type = blockType.HIT;\n\n        if (block.type === blockType.HEAD || block.type === blockType.BODY)\n          dead = false;\n      });\n    });\n  };\n\n  const rotate = () => {\n    let tmpblocks = [\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n    ];\n\n    for (let i = 0; i < blocks.length; i++) {\n      for (let j = 0; j < blocks.length; j++) {\n        tmpblocks[i][j].x = blocks[i][j].x;\n        tmpblocks[i][j].y = blocks[i][j].y;\n        tmpblocks[i][j].type = blocks[blocks.length - j - 1][i].type;\n        if (tmpblocks[i][j].type === blockType.HEAD) {\n          head = { x: tmpblocks[i][j].x, y: tmpblocks[i][j].y };\n        }\n      }\n    }\n\n    blocks.splice(0, blocks.length, ...tmpblocks);\n  };\n\n  const move = (xdelta, ydelta) => {\n    let tmpblocks = [\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n    ];\n\n    for (let i = 0; i < blocks.length; i++) {\n      for (let j = 0; j < blocks.length; j++) {\n        tmpblocks[i][j].x = blocks[i][j].x + parseInt(xdelta);\n        tmpblocks[i][j].y = blocks[i][j].y + parseInt(ydelta);\n        tmpblocks[i][j].type = blocks[i][j].type;\n      }\n    }\n\n    blocks.splice(0, blocks.length, ...tmpblocks);\n  };\n\n  const getDead = () => {\n    return dead;\n  };\n\n  const getBlocks = () => {\n    return blocks;\n  };\n  return { head, getBlocks, hit, rotate, getDead, blockType, move };\n};\n\nexport default Plane;\n","import Gameboard from \"../components/Gameboard\";\nimport Plane from \"../components/Plane\";\n\nfunction BlockUI(props) {\n  let blocktype = \"\";\n  let blocktext = \"\";\n  let block = props.block;\n  switch (props.block.type) {\n    case \"H\":\n      blocktype = \"btn-primary\";\n      blocktext = \"H\";\n      break;\n    case \"B\":\n      blocktype = \"btn-secondary\";\n      blocktext = \"B\";\n      break;\n    case \"_\":\n      blocktype = \"btn-light\";\n      blocktext = \"_\";\n      break;\n    case \"X\":\n      blocktype = \"btn-danger\";\n      blocktext = \"X\";\n      break;\n  }\n  return (\n    <div>\n      {/*       <button\n        type=\"button\"\n        className={`btn ${blocktype} m-0 p-1 ${block.x} ${block.y}`}\n        style={{ margin: \"0xp\", width: \"1.5rem\", height: \"1.5rem\" }}\n        data-x={block.x}\n        data-y={block.y}\n      >\n      </button> */}\n\n      <div\n        className={`${blocktype} ${block.x} ${block.y}`}\n        style={{\n          width: \"30px\",\n          height: \"30px\",\n          border: \"1px solid black\",\n          margin: \"0px\",\n        }}\n        data-x={block.x}\n        data-y={block.y}\n      ></div>\n    </div>\n  );\n}\n\nexport default BlockUI;\n","const gameStatus = {\n  selecting: 1,\n  moving: 2,\n  movingout: 3,\n  movingin: 4,\n  dropped: 5,\n};\n\nexport default gameStatus;\n","function drawBlocks(blocks) {\n  let str = \"\";\n\n  for (let i = 0; i < blocks.length; i++) {\n    str = str.concat(\"\\n\");\n    for (let j = 0; j < blocks.length; j++) {\n      str = str.concat(\"x=\" + blocks[i][j].x + \" \" + \"y=\" + blocks[i][j].y);\n      str = str.concat(\"  \" + blocks[i][j].type);\n      str = str.concat(\"   |   \");\n    }\n  }\n  console.log(str);\n  return str;\n}\n\nexport default drawBlocks;\n","import Gameboard from \"../components/Gameboard\";\nimport Plane from \"../components/Plane\";\nimport BlockUI from \"./BlockUI\";\nimport uniqid from \"uniqid\";\nimport { Component } from \"react\";\nimport gameStatus from \"../util/gameStatus\";\nimport blockType from \"../util/blockType\";\nimport drawBlocks from \"../util/drawBlocks\";\n\nclass GameboardUI extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Load UI\");\n    this.gameBoard = Gameboard();\n    this.state = {\n      status: gameStatus.selecting,\n      gameBoardGrid: this.gameBoard.getBlocks(),\n      moveOrigin: { x: 0, y: 0 },\n    };\n\n    const plane1 = Plane({ x: 2, y: 2 });\n    this.gameBoard.addPlane(plane1);\n\n    const plane2 = Plane({ x: 5, y: 5 });\n    this.gameBoard.addPlane(plane2);\n  }\n\n  onBlockClick(e) {\n    e.preventDefault();\n\n    console.log(e.button);\n    /* \n    switch (this.state.status) {\n      case gameStatus.placing:\n        break;\n      case gameStatus.playing:\n        this.gameBoard.hit({\n          x: e.target.dataset.x,\n          y: e.target.dataset.y,\n        });\n        this.setState({ gameBoardGrid: this.gameBoard.getBlocks() });\n        break;\n      default:\n        break;\n    } */\n  }\n\n  mouseDown(e) {\n    if (\n      this.state.status === gameStatus.selecting ||\n      this.state.status === gameStatus.dropped\n    ) {\n      console.log(\"down\");\n      this.setState({ status: gameStatus.moving });\n      this.forceUpdate();\n    }\n  }\n\n  mouseLeave(e) {\n    if (\n      this.state.status === gameStatus.moving ||\n      this.state.status === gameStatus.movingin\n    ) {\n      if (e.target.dataset.x !== null && e.target.dataset.y !== null) {\n        console.log(\"leave\");\n        this.setState({ status: gameStatus.movingout });\n        this.setState({\n          moveOrigin: { x: e.target.dataset.x, y: e.target.dataset.y },\n        });\n        this.forceUpdate();\n      }\n    }\n  }\n\n  mouseEnter(e) {\n    if (this.state.status === gameStatus.movingout) {\n      console.log(\"enter\");\n      if (e.target.dataset.x != null && e.target.dataset.y != null) {\n        let destx = e.target.dataset.x;\n        let desty = e.target.dataset.y;\n        console.log(this.state.moveOrigin);\n        console.log(\"destx:\" + destx + \" desty:\" + desty);\n\n        this.gameBoard.movePlane(this.state.moveOrigin, {\n          x: destx,\n          y: desty,\n        });\n      }\n\n      this.setState({ gameBoardGrid: this.gameBoard.getBlocks() });\n      this.setState({ status: gameStatus.movingin });\n      this.forceUpdate();\n    }\n  }\n\n  mouseUp(e) {\n    console.log(\"up\");\n    this.setState({ status: gameStatus.dropped });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              {this.state.gameBoardGrid.map((br) => {\n                return (\n                  <div className=\"row p-0 m-0\" key={uniqid()}>\n                    {br.map((block) => {\n                      return (\n                        <div\n                          className=\"col-auto p-0 m-0\"\n                          key={uniqid()}\n                          onClick={this.onBlockClick.bind(this)}\n                          onMouseDown={this.mouseDown.bind(this)}\n                          onMouseLeave={this.mouseLeave.bind(this)}\n                          onMouseOver={this.mouseEnter.bind(this)}\n                          onMouseUp={this.mouseUp.bind(this)}\n                        >\n                          <BlockUI block={block} />\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameboardUI;\n","import \"./App.css\";\nimport GameboardUI from \"./ui/GameboardUI\";\n\nfunction App() {\n  return <GameboardUI></GameboardUI>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}