{"version":3,"sources":["util/blockType.js","components/Gameboard.js","components/Plane.js","ui/BlockUI.js","util/gameStatus.js","ui/GameboardUI.js","App.js","reportWebVitals.js","index.js"],"names":["blockType","HEAD","BODY","NOT_DEFINED","HIT","HITMISS","Gameboard","blocks","planes","i","boardSize","row","j","push","x","y","type","selectedPlane","updateBoard","getBlocks","forEach","b","plane","pb","tmpblocks","br","block","addPlane","success","getPlanes","rotate","eachPlane","eachpb","otherPlane","otherpb","length","hit","hitx","hity","console","log","parseInt","moveSelectedPlane","xorg","yorg","xdest","ydest","xdelta","ydelta","movable","undefined","everyPlane","epb","move","moveOrigin","selectPlane","newSelectedPlane","getSelectedPlane","Plane","head","dead","getHead","headHit","splice","getDead","BlockUI","props","blocktype","visible","className","style","border","margin","width","height","data-x","data-y","gameStatus","selecting","moving","movingout","movingin","dropped","hitting","locked","hideen","touchSelecting","touchDropped","GameboardUI","computeAndDeclareWinner","winner","anyPlaneAlive","gameBoard","pubsub","publish","createRandomPlanes","index","Math","floor","random","sqrt","planeSet","state","status","boardType","gameBoardGrid","clicks","clickdelay","mounted","unsubscribe","subscribe","data","unhitBlocks","randomBlockIndex","alreadyHit","setState","this","prevProps","e","target","dataset","setTimeout","bind","mouseClick","forceUpdate","destx","desty","position","display","gridTemplateRows","gridTemplateColumns","map","onMouseDown","mouseDown","onMouseLeave","mouseLeave","onMouseOver","mouseEnter","onMouseUp","mouseUp","onTouchStart","touchStart","onTouchEnd","touchEnd","onTouchCancel","touchCancel","uniqid","Component","App","onPlayClick","board2Status","board1Status","onPlayAgain","window","location","reload","PubSub","role","marginLeft","marginRight","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1696a99.chunk.js","sourcesContent":["const blockType = {\n  HEAD: \"H\",\n  BODY: \"B\",\n  NOT_DEFINED: \"_\",\n  HIT: \"X\",\n  HITMISS: \"Y\",\n};\n\nexport default blockType;\n","import { publish } from \"pubsub-js\";\nimport blockType from \"../util/blockType\";\nconst Gameboard = () => {\n  const boardSize = 10;\n  let blocks = [];\n  let planes = [];\n\n  for (let i = boardSize - 1; i >= 0; i--) {\n    let row = [];\n    for (let j = 0; j < boardSize; j++) {\n      row.push({ x: j, y: i, type: blockType.NOT_DEFINED });\n    }\n    blocks.push(row);\n  }\n\n  const addPlane = (plane) => {\n    let success = true;\n    plane.getBlocks().forEach((pb) => {\n      if (\n        pb.x < 0 ||\n        pb.x > boardSize - 1 ||\n        pb.y < 0 ||\n        pb.y > boardSize - 1\n      ) {\n        if (pb.type === blockType.HEAD || pb.type === blockType.BODY) {\n          success = false;\n        }\n      }\n    });\n\n    getBlocks().forEach((b) => {\n      plane.getBlocks().forEach((pb) => {\n        if (b.x === pb.x && b.y === pb.y) {\n          if (\n            (b.type === blockType.HEAD || b.type === blockType.BODY) &&\n            (pb.type === blockType.HEAD || pb.type === blockType.BODY)\n          ) {\n            success = false;\n          }\n        }\n      });\n    });\n\n    if (success) {\n      planes.push(plane);\n      updateBoard();\n    }\n    return success;\n  };\n\n  const updateBoard = () => {\n    getBlocks().forEach((b) => {\n      if (b.type !== blockType.HITMISS) b.type = blockType.NOT_DEFINED;\n    });\n\n    planes.forEach((plane) => {\n      getBlocks().forEach((b) => {\n        plane.getBlocks().forEach((pb) => {\n          if (b.x === pb.x && b.y === pb.y) {\n            if (\n              (pb.type === blockType.HEAD || pb.type === blockType.BODY) &&\n              b.type === blockType.NOT_DEFINED\n            )\n              b.type = pb.type;\n\n            if (\n              pb.type === blockType.HITMISS &&\n              b.type === blockType.NOT_DEFINED\n            )\n              b.type = blockType.HITMISS;\n\n            if (pb.type === blockType.HIT && b.type === blockType.NOT_DEFINED)\n              b.type = blockType.HIT;\n\n            if (pb.type === blockType.HIT && b.type === blockType.HITMISS)\n              b.type = blockType.HIT;\n          }\n        });\n      });\n    });\n  };\n\n  let moveOrigin = { x: 0, y: 0 };\n\n  let selectedPlane;\n\n  const selectPlane = ({ x: xorg, y: yorg }) => {\n    let newSelectedPlane;\n    planes.forEach((plane) => {\n      plane.getBlocks().forEach((pb) => {\n        if (pb.x === parseInt(xorg) && pb.y === parseInt(yorg))\n          newSelectedPlane = plane;\n      });\n    });\n\n    if (newSelectedPlane !== selectedPlane && newSelectedPlane !== undefined) {\n      selectedPlane = newSelectedPlane;\n    }\n  };\n\n  const moveSelectedPlane = ({ x: xorg, y: yorg }, { x: xdest, y: ydest }) => {\n    let xdelta = xdest - xorg;\n    let ydelta = ydest - yorg;\n\n    let movable = true;\n\n    if (selectedPlane !== undefined) {\n      selectedPlane.getBlocks().forEach((pb) => {\n        if (\n          (pb.x + xdelta < 0 ||\n            pb.x + xdelta > blocks.length - 1 ||\n            pb.y + ydelta < 0 ||\n            pb.y + ydelta > blocks.length - 1) &&\n          (pb.type === blockType.BODY || pb.type === blockType.HEAD)\n        ) {\n          movable = false;\n        }\n      });\n\n      planes.forEach((everyPlane) => {\n        if (everyPlane !== selectedPlane) {\n          everyPlane.getBlocks().forEach((epb) => {\n            selectedPlane.getBlocks().forEach((pb) => {\n              if (\n                (epb.type === blockType.HEAD || epb.type === blockType.BODY) &&\n                (pb.type === blockType.HEAD || pb.type === blockType.BODY)\n              ) {\n                if (epb.x === pb.x + xdelta && epb.y === pb.y + ydelta)\n                  movable = false;\n              }\n            });\n          });\n        }\n      });\n\n      if (movable) {\n        getBlocks().forEach((b) => {\n          selectedPlane.getBlocks().forEach((pb) => {\n            if (b.x === pb.x && b.y === pb.y) b.type = blockType.NOT_DEFINED;\n          });\n        });\n\n        selectedPlane.move(xdelta, ydelta);\n        updateBoard();\n      }\n    }\n  };\n\n  const rotate = (plane) => {\n    plane.rotate();\n\n    planes.forEach((eachPlane) => {\n      eachPlane.getBlocks().forEach((eachpb) => {\n        planes.forEach((otherPlane) => {\n          if (eachPlane !== otherPlane)\n            otherPlane.getBlocks().forEach((otherpb) => {\n              if (\n                eachpb.x === otherpb.x &&\n                eachpb.y === otherpb.y &&\n                ((eachpb.type === blockType.BODY &&\n                  otherpb.type === blockType.BODY) ||\n                  (eachpb.type === blockType.HEAD &&\n                    otherpb.type === blockType.HEAD) ||\n                  (eachpb.type === blockType.HEAD &&\n                    otherpb.type === blockType.BODY) ||\n                  (eachpb.type === blockType.BODY &&\n                    otherpb.type === blockType.HEAD))\n              ) {\n                plane.rotate();\n                plane.rotate();\n                plane.rotate();\n              }\n            });\n        });\n      });\n    });\n\n    plane.getBlocks().forEach((pb) => {\n      if (\n        (pb.x < 0 ||\n          pb.x > blocks.length - 1 ||\n          pb.y < 0 ||\n          pb.y > blocks.length - 1) &&\n        (pb.type === blockType.BODY || pb.type === blockType.HEAD)\n      ) {\n        plane.rotate();\n        plane.rotate();\n        plane.rotate();\n      }\n    });\n\n    updateBoard();\n  };\n\n  const getBlocks = () => {\n    let tmpblocks = [];\n\n    blocks.forEach((br) => {\n      br.forEach((block) => {\n        tmpblocks.push(block);\n      });\n    });\n\n    return [...tmpblocks];\n  };\n\n  const getPlanes = () => {\n    return planes;\n  };\n\n  const getSelectedPlane = () => {\n    return selectedPlane;\n  };\n  const hit = ({ x: hitx, y: hity }) => {\n    console.log(hitx + \" \" + hity);\n    console.log(planes);\n    getBlocks().forEach((b) => {\n      if (b.x === parseInt(hitx) && b.y === parseInt(hity)) {\n        b.type = blockType.HITMISS;\n      }\n    });\n\n    planes.forEach((plane) => {\n      plane.hit({ x: hitx, y: hity });\n    });\n\n    updateBoard();\n  };\n\n  return {\n    boardSize,\n    getBlocks,\n    addPlane,\n    getPlanes,\n    rotate,\n    hit,\n    moveSelectedPlane,\n    moveOrigin,\n    selectPlane,\n    getSelectedPlane,\n  };\n};\n\nexport default Gameboard;\n","import blockType from \"../util/blockType\";\n\nconst Plane = ({ x: headx, y: heady }) => {\n  let head = { x: headx, y: heady };\n  let dead = false;\n\n  let blocks = [\n    [\n      { x: head.x - 1, y: head.y, type: blockType.NOT_DEFINED },\n      { x: head.x, y: head.y, type: blockType.HEAD },\n      { x: head.x + 1, y: head.y, type: blockType.NOT_DEFINED },\n      { x: head.x + 2, y: head.y, type: blockType.NOT_DEFINED },\n    ],\n    [\n      { x: head.x - 1, y: head.y - 1, type: blockType.BODY },\n      { x: head.x, y: head.y - 1, type: blockType.BODY },\n      { x: head.x + 1, y: head.y - 1, type: blockType.BODY },\n      { x: head.x + 2, y: head.y - 1, type: blockType.NOT_DEFINED },\n    ],\n    [\n      { x: head.x - 1, y: head.y - 2, type: blockType.NOT_DEFINED },\n      { x: head.x, y: head.y - 2, type: blockType.BODY },\n      { x: head.x + 1, y: head.y - 2, type: blockType.NOT_DEFINED },\n      { x: head.x + 2, y: head.y - 2, type: blockType.NOT_DEFINED },\n    ],\n    [\n      { x: head.x - 1, y: head.y - 3, type: blockType.BODY },\n      { x: head.x, y: head.y - 3, type: blockType.BODY },\n      { x: head.x + 1, y: head.y - 3, type: blockType.BODY },\n      { x: head.x + 2, y: head.y - 3, type: blockType.NOT_DEFINED },\n    ],\n  ];\n\n  const hit = ({ x: hitx, y: hity }) => {\n    let headHit = false;\n    if (parseInt(hitx) === head.x && parseInt(hity) === head.y) headHit = true;\n\n    getBlocks().forEach((block) => {\n      if (block.x === parseInt(hitx) && block.y === parseInt(hity)) {\n        if (block.type === blockType.BODY || block.type === blockType.HEAD)\n          block.type = blockType.HIT;\n      }\n      if (headHit && block.type === blockType.BODY) block.type = blockType.HIT;\n    });\n\n    dead = true;\n\n    getBlocks().forEach((block) => {\n      if (block.type === blockType.HEAD || block.type === blockType.BODY)\n        dead = false;\n    });\n  };\n\n  const rotate = () => {\n    let tmpblocks = [\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n    ];\n\n    for (let i = 0; i < blocks.length; i++) {\n      for (let j = 0; j < blocks.length; j++) {\n        tmpblocks[i][j].x = blocks[i][j].x;\n        tmpblocks[i][j].y = blocks[i][j].y;\n        tmpblocks[i][j].type = blocks[blocks.length - j - 1][i].type;\n      }\n    }\n    blocks.splice(0, blocks.length, ...tmpblocks);\n\n    getBlocks().forEach((block) => {\n      if (block.type === blockType.HEAD) head = { x: block.x, y: block.y };\n    });\n  };\n\n  const move = (xdelta, ydelta) => {\n    let tmpblocks = [\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n    ];\n\n    for (let i = 0; i < blocks.length; i++) {\n      for (let j = 0; j < blocks.length; j++) {\n        tmpblocks[i][j].x = blocks[i][j].x + parseInt(xdelta);\n        tmpblocks[i][j].y = blocks[i][j].y + parseInt(ydelta);\n        tmpblocks[i][j].type = blocks[i][j].type;\n      }\n    }\n\n    blocks.splice(0, blocks.length, ...tmpblocks);\n\n    getBlocks().forEach((block) => {\n      if (block.type === blockType.HEAD) head = { x: block.x, y: block.y };\n    });\n  };\n\n  const getDead = () => {\n    return dead;\n  };\n\n  const getHead = () => {\n    return head;\n  };\n\n  const getBlocks = () => {\n    let tmpblocks = [];\n\n    blocks.forEach((br) => {\n      br.forEach((block) => {\n        tmpblocks.push(block);\n      });\n    });\n\n    return [...tmpblocks];\n  };\n  return { getHead, getBlocks, hit, rotate, getDead, blockType, move };\n};\n\nexport default Plane;\n","import blockType from \"../util/blockType\";\n\nfunction BlockUI(props) {\n  let blocktype = \"\";\n  let block = props.block;\n  switch (props.block.type) {\n    case \"H\":\n      blocktype = \"btn-primary\";\n      break;\n    case \"B\":\n      blocktype = \"btn-secondary\";\n      break;\n    case \"_\":\n      blocktype = \"btn-light\";\n      break;\n    case \"X\":\n      blocktype = \"btn-danger\";\n      break;\n    case \"Y\":\n      blocktype = \"btn-warning\";\n      break;\n    default:\n      break;\n  }\n\n  if (\n    props.visible === false &&\n    props.block.type !== blockType.HIT &&\n    props.block.type !== blockType.HITMISS\n  )\n    blocktype = \"btn-light\";\n\n  return (\n    <div\n      className={`${blocktype} ${block.x} ${block.y}`}\n      style={{\n        border: \"1px solid darkgrey\",\n        margin: \"0px\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      data-x={block.x}\n      data-y={block.y}\n    ></div>\n  );\n}\n\nexport default BlockUI;\n","const gameStatus = {\n  selecting: 1,\n  moving: 2,\n  movingout: 3,\n  movingin: 4,\n  dropped: 5,\n  hitting: 6,\n  locked: 7,\n  hideen: 8,\n  touchSelecting: 9,\n  touchDropped: 10,\n};\n\nexport default gameStatus;\n","import Gameboard from \"../components/Gameboard\";\nimport Plane from \"../components/Plane\";\nimport BlockUI from \"./BlockUI\";\nimport uniqid from \"uniqid\";\nimport { Component } from \"react\";\nimport gameStatus from \"../util/gameStatus\";\nimport blockType from \"../util/blockType\";\n\nclass GameboardUI extends Component {\n  constructor(props) {\n    super(props);\n    this.gameBoard = Gameboard();\n    this.state = {\n      status: props.gameStatus,\n      visible: props.visible,\n      boardType: props.boardType,\n      gameBoardGrid: this.gameBoard.getBlocks(),\n    };\n\n    this.clicks = 0;\n    this.clickdelay = 400;\n    this.mounted = false;\n\n    this.createRandomPlanes();\n\n    this.pubsub = props.pubsub;\n    if (this.state.boardType === \"player\") {\n      this.pubsub.unsubscribe(\"ai\");\n      this.pubsub.subscribe(\"ai\", (data) => {\n        if (data === \"aitriggerhit\") {\n          let unhitBlocks = [];\n\n          this.gameBoard.getBlocks().forEach((block) => {\n            if (\n              block.type !== blockType.HIT &&\n              block.type !== blockType.HITMISS\n            )\n              unhitBlocks.push(block);\n          });\n\n          let randomBlockIndex = Math.floor(Math.random() * unhitBlocks.length);\n          this.alreadyHit = false;\n          this.gameBoard.getBlocks().forEach((block) => {\n            if (\n              block.x === unhitBlocks[randomBlockIndex].x &&\n              block.y === unhitBlocks[randomBlockIndex].y\n            ) {\n              this.gameBoard.hit({\n                x: block.x,\n                y: block.y,\n              });\n            }\n          });\n\n          this.computeAndDeclareWinner(\"ai\");\n\n          if (this.mounted)\n            this.setState({ gameBoardGrid: this.gameBoard.getBlocks() });\n        }\n      });\n    }\n  }\n\n  computeAndDeclareWinner = (winner) => {\n    let anyPlaneAlive = false;\n    this.gameBoard.getPlanes().forEach((plane) => {\n      if (plane.getDead() === false) {\n        anyPlaneAlive = true;\n      }\n    });\n    if (!anyPlaneAlive) this.pubsub.publish(\"gameEvent\", `${winner}win`);\n  };\n\n  createRandomPlanes = () => {\n    let planes = [];\n    let index = 0;\n\n    while (index < 3) {\n      planes[index] = Plane({\n        x: Math.floor(\n          Math.random() * Math.sqrt(this.gameBoard.getBlocks().length)\n        ),\n        y: Math.floor(\n          Math.random() * Math.sqrt(this.gameBoard.getBlocks().length)\n        ),\n      });\n      let planeSet = false;\n      while (planeSet === false) {\n        planes[index] = null;\n        planes[index] = Plane({\n          x: Math.floor(\n            Math.random() * Math.sqrt(this.gameBoard.getBlocks().length)\n          ),\n          y: Math.floor(\n            Math.random() * Math.sqrt(this.gameBoard.getBlocks().length)\n          ),\n        });\n        planeSet = this.addPlane(planes[index]);\n\n        for (let i = 0; i < Math.random() * 2; i++)\n          this.gameBoard.rotate(planes[index]);\n      }\n      index++;\n    }\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.gameStatus !== this.props.gameStatus) {\n      this.setState({ status: this.props.gameStatus });\n    }\n  }\n\n  addPlane = (plane) => {\n    return this.gameBoard.addPlane(plane);\n  };\n\n  mouseClick(e) {\n    if (this.state.status === gameStatus.locked) return;\n\n    this.gameBoard.hit({\n      x: e.target.dataset.x,\n      y: e.target.dataset.y,\n    });\n\n    this.setState({ gameBoardGrid: this.gameBoard.getBlocks() });\n    if (this.state.boardType === \"ai\") {\n      this.pubsub.publish(\"player\", \"playerdidhit\");\n      this.computeAndDeclareWinner(\"player\");\n    }\n  }\n\n  mouseDown(e) {\n    if (this.state.status === gameStatus.locked) return;\n    if (\n      this.state.status === gameStatus.selecting ||\n      this.state.status === gameStatus.dropped\n    ) {\n      this.clicks++;\n      setTimeout(\n        function () {\n          this.clicks = 0;\n        }.bind(this),\n        this.clickdelay\n      );\n\n      if (this.clicks === 2) {\n        this.gameBoard.selectPlane({\n          x: e.target.dataset.x,\n          y: e.target.dataset.y,\n        });\n\n        this.gameBoard.rotate(this.gameBoard.getSelectedPlane());\n        this.setState({ gameBoardGrid: this.gameBoard.getBlocks() });\n        this.clicks = 0;\n        return;\n      } else {\n        this.setState({ status: gameStatus.moving });\n        this.gameBoard.selectPlane({\n          x: e.target.dataset.x,\n          y: e.target.dataset.y,\n        });\n        this.gameBoard.moveOrigin = {\n          x: e.target.dataset.x,\n          y: e.target.dataset.y,\n        };\n      }\n    }\n    if (this.state.status === gameStatus.hitting) this.mouseClick(e);\n  }\n\n  mouseLeave(e) {\n    if (this.state.status === gameStatus.locked) return;\n    if (\n      this.state.status === gameStatus.moving ||\n      this.state.status === gameStatus.movingin\n    ) {\n      if (e.target.dataset.x !== null && e.target.dataset.y !== null) {\n        this.setState({ status: gameStatus.movingout });\n\n        this.gameBoard.moveOrigin = {\n          x: e.target.dataset.x,\n          y: e.target.dataset.y,\n        };\n      }\n      this.forceUpdate();\n    }\n  }\n\n  mouseEnter(e) {\n    if (this.state.status === gameStatus.locked) return;\n    if (this.state.status === gameStatus.movingout) {\n      if (e.target.dataset.x != null && e.target.dataset.y != null) {\n        let destx = e.target.dataset.x;\n        let desty = e.target.dataset.y;\n\n        this.gameBoard.moveSelectedPlane(this.gameBoard.moveOrigin, {\n          x: destx,\n          y: desty,\n        });\n      }\n\n      this.setState({ gameBoardGrid: this.gameBoard.getBlocks() });\n      this.setState({ status: gameStatus.movingin });\n      this.forceUpdate();\n    }\n  }\n\n  mouseUp(e) {\n    if (this.state.status === gameStatus.locked) return;\n    if (this.state.status !== gameStatus.hitting) {\n      this.setState({ status: gameStatus.dropped });\n    }\n  }\n\n  touchStart(e) {\n    console.log(\"touchstart \" + e.target.dataset.x + \" \" + e.target.dataset.y);\n  }\n\n  touchEnd(e) {\n    console.log(\"touchend \" + e.target.dataset.x + \" \" + e.target.dataset.y);\n  }\n  touchCancel(e) {\n    console.log(\"touchCancel \" + e.target.dataset.x + \" \" + e.target.dataset.y);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div\n          className=\"card\"\n          style={{\n            width: \"240px\",\n            height: \"240px\",\n          }}\n        >\n          <div\n            className=\"card-body\"\n            style={{\n              position: \"relative\",\n              display: \"grid\",\n              gridTemplateRows: \"repeat(10, 20px)\",\n              gridTemplateColumns: \"repeat(10, 20px)\",\n            }}\n          >\n            {this.state.gameBoardGrid.map((block) => {\n              return (\n                <div\n                  className=\"box\"\n                  key={uniqid()}\n                  onMouseDown={this.mouseDown.bind(this)}\n                  onMouseLeave={this.mouseLeave.bind(this)}\n                  onMouseOver={this.mouseEnter.bind(this)}\n                  onMouseUp={this.mouseUp.bind(this)}\n                  onTouchStart={this.touchStart.bind(this)}\n                  onTouchEnd={this.touchEnd.bind(this)}\n                  onTouchCancel={this.touchCancel.bind(this)}\n                >\n                  <BlockUI block={block} visible={this.state.visible} />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameboardUI;\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport GameboardUI from \"./ui/GameboardUI\";\nimport gameStatus from \"./util/gameStatus\";\nimport PubSub from \"PubSub\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    console.log(\"startup\");\n    this.board1Status = gameStatus.selecting;\n    this.board2Status = gameStatus.locked;\n    this.winner = \"\";\n\n    this.pubsub = new PubSub();\n\n    this.pubsub.subscribe(\"gameEvent\", (data) => {\n      if (data === \"playerwin\") {\n        this.winner = \"player\";\n        this.board1Status = gameStatus.locked;\n        this.board2Status = gameStatus.locked;\n        this.forceUpdate();\n      }\n      if (data === \"aiwin\") {\n        this.winner = \"ai\";\n        this.board1Status = gameStatus.locked;\n        this.board2Status = gameStatus.locked;\n        this.forceUpdate();\n      }\n    });\n\n    this.pubsub.subscribe(\"player\", (data) => {\n      if (data === \"playerdidhit\") {\n        if (this.board2Status === gameStatus.hitting) {\n          this.board1Status = gameStatus.locked;\n          this.pubsub.publish(\"ai\", \"aitriggerhit\");\n        }\n      }\n    });\n\n    this.pubsub.publish(\"gameEvent\", \"start\");\n  }\n\n  onPlayClick = () => {\n    console.log(\"hitting status\");\n    this.board2Status = gameStatus.hitting;\n    this.board1Status = gameStatus.locked;\n    this.forceUpdate();\n  };\n\n  onPlayAgain = () => {\n    window.location.reload(false);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"card\" style={{ width: \"100%\" }}>\n          <div className=\"card-body\">\n            {this.board1Status === gameStatus.selecting && (\n              <div>\n                <div\n                  className=\"alert alert-primary\"\n                  role=\"alert\"\n                  style={{\n                    width: \"50%\",\n                    marginLeft: \"25%\",\n                    marginRight: \"25%\",\n                  }}\n                >\n                  Place the planes!\n                </div>\n                <div\n                  className=\"alert alert-info\"\n                  role=\"alert\"\n                  style={{\n                    width: \"50%\",\n                    marginLeft: \"25%\",\n                    marginRight: \"25%\",\n                  }}\n                >\n                  Drag them around, double click to rotate\n                </div>\n              </div>\n            )}\n\n            {this.winner === \"player\" && (\n              <div>\n                <div\n                  className=\"alert alert-primary\"\n                  role=\"alert\"\n                  style={{\n                    width: \"50%\",\n                    marginLeft: \"25%\",\n                    marginRight: \"25%\",\n                  }}\n                >\n                  YOU WON!\n                </div>\n                <div className=\"row justify-content-center\">\n                  <div className=\"col-auto\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-dark m-3\"\n                      onClick={this.onPlayAgain.bind(this)}\n                    >\n                      Play again!\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {this.winner === \"ai\" && (\n              <div>\n                <div\n                  className=\"alert alert-primary\"\n                  role=\"alert\"\n                  style={{\n                    width: \"50%\",\n                    marginLeft: \"25%\",\n                    marginRight: \"25%\",\n                  }}\n                >\n                  YOU LOST!\n                </div>\n                <div className=\"row justify-content-center\">\n                  <div className=\"col-auto\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-dark m-3\"\n                      onClick={this.onPlayAgain.bind(this)}\n                    >\n                      Play again!\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"container\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-auto mx-auto\">\n                  <GameboardUI\n                    gameStatus={this.board1Status}\n                    visible={true}\n                    boardType=\"player\"\n                    pubsub={this.pubsub}\n                  ></GameboardUI>\n                </div>\n                {this.board1Status === gameStatus.selecting && (\n                  <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-dark m-3\"\n                        onClick={this.onPlayClick.bind(this)}\n                      >\n                        Play!\n                      </button>\n                    </div>\n                  </div>\n                )}\n                <div className=\"col-auto mx-auto\">\n                  <GameboardUI\n                    gameStatus={this.board2Status}\n                    visible={false}\n                    boardType=\"ai\"\n                    pubsub={this.pubsub}\n                  ></GameboardUI>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}