{"version":3,"sources":["util/blockType.js","components/Gameboard.js","components/Plane.js","ui/BlockUI.js","util/gameStatus.js","ui/GameboardUI.js","App.js","reportWebVitals.js","index.js"],"names":["blockType","HEAD","BODY","NOT_DEFINED","HIT","AIR","Gameboard","blocks","planes","i","boardSize","row","j","push","x","y","type","selectedPlane","addPlane","plane","success","outOfPlane","getBlocks","forEach","pb","collision","b","updateBoard","removePlane","pl","length","head","splice","tmpblocks","br","block","getPlanes","rotate","hit","hitx","hity","parseInt","moveSelectedPlane","xorg","yorg","xdest","ydest","xdelta","ydelta","movable","undefined","everyPlane","epb","move","moveOrigin","selectPlane","newSelectedPlane","getSelectedPlane","Plane","dead","getHead","headHit","blockLine","getDead","BlockUI","props","blocktype","className","style","border","margin","width","height","data-x","data-y","gameStatus","selecting","moving","movingout","movingin","dropped","hitting","GameboardUI","gameBoard","state","status","gameBoardGrid","plane1","plane2","clicks","clickdelay","e","console","log","this","target","dataset","setState","forceUpdate","destx","desty","setTimeout","bind","mouseClick","display","gridTemplateRows","gridTemplateColumns","map","onMouseDown","mouseDown","onMouseLeave","mouseLeave","onMouseOver","mouseEnter","onMouseUp","mouseUp","onDoubleClick","mouseDouble","uniqid","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAQeA,EARG,CAChBC,KAAM,IACNC,KAAM,IACNC,YAAa,IACbC,IAAK,IACLC,IAAK,KCqNQC,EAxNG,WAKhB,IAJA,IACIC,EAAS,GACTC,EAAS,GAEJC,EAAIC,EAAeD,GAAK,EAAGA,IAAK,CAEvC,IADA,IAAIE,EAAM,GACDC,EAAI,EAAGA,EANA,GAMeA,IAC7BD,EAAIE,KAAK,CAAEC,EAAGF,EAAGG,EAAGN,EAAGO,KAAMhB,EAAUG,cAEzCI,EAAOM,KAAKF,GAGd,IAmFIM,EAnFEC,EAAW,SAACC,GAChB,IAAIC,GAAU,EACVC,GAAa,EACjBF,EAAMG,YAAYC,SAAQ,SAACC,IAEvBA,EAAGV,EAAI,GACPU,EAAGV,EAAIJ,GACPc,EAAGT,EAAI,GACPS,EAAGT,EAAIL,KAEHc,EAAGR,OAAShB,EAAUC,MAAQuB,EAAGR,OAAShB,EAAUE,OACtDmB,GAAa,EACbD,GAAU,OAKhB,IAAIK,GAAY,EAoBhB,OAnBAH,IAAYC,SAAQ,SAACG,GACnBP,EAAMG,YAAYC,SAAQ,SAACC,GACrBE,EAAEZ,IAAMU,EAAGV,GAAKY,EAAEX,IAAMS,EAAGT,IAE1BW,EAAEV,OAAShB,EAAUC,MAAQyB,EAAEV,OAAShB,EAAUE,MAClDsB,EAAGR,OAAShB,EAAUC,MAAQuB,EAAGR,OAAShB,EAAUE,OAErDuB,GAAY,EACZL,GAAU,WAMC,IAAfC,IAAsC,IAAdI,IAC1BjB,EAAOK,KAAKM,GACZQ,KAGKP,GAGHO,EAAc,WAClBnB,EAAOe,SAAQ,SAACJ,GACdG,IAAYC,SAAQ,SAACG,GACnBP,EAAMG,YAAYC,SAAQ,SAACC,GACrBE,EAAEZ,IAAMU,EAAGV,GAAKY,EAAEX,IAAMS,EAAGT,IAE3BS,EAAGR,OAAShB,EAAUC,MACtBuB,EAAGR,OAAShB,EAAUE,MACtBsB,EAAGR,OAAShB,EAAUI,MAEtBsB,EAAEV,KAAOQ,EAAGR,iBAOlBY,EAAc,SAACT,GACnBX,EAAOe,SAAQ,SAACM,GACVA,IAAOV,GACTG,IAAYC,SAAQ,SAACG,GACnBG,EAAGP,YAAYC,SAAQ,SAACC,GAClBE,EAAEZ,IAAMU,EAAGV,GAAKY,EAAEX,IAAMS,EAAGT,IAE1BW,EAAEV,OAAShB,EAAUE,MAAQwB,EAAEV,OAAShB,EAAUC,MAClDuB,EAAGR,OAAShB,EAAUE,MAAQsB,EAAGR,OAAShB,EAAUC,OAErDuB,EAAK,KACLE,EAAEV,KAAOhB,EAAUG,uBAQ/B,IAAK,IAAIM,EAAI,EAAGA,EAAID,EAAOsB,OAAQrB,IAC7BD,EAAOC,GAAGsB,OAASZ,EAAMY,MAAMvB,EAAOwB,OAAOvB,EAAG,IA4ElDa,EAAY,WAChB,IAAIW,EAAY,GAQhB,OANA1B,EAAOgB,SAAQ,SAACW,GACdA,EAAGX,SAAQ,SAACY,GACVF,EAAUpB,KAAKsB,SAIb,GAAN,OAAWF,IA0Bb,MAAO,CACLvB,UAzMgB,GA0MhBY,YACAJ,WACAU,cACAQ,UA5BgB,WAChB,OAAO5B,GA4BP6B,OAhDa,SAAClB,GAId,OAHAS,EAAYT,GACZA,EAAMkB,SACQnB,EAASC,IA8CvBmB,IAvBU,SAAC,GAA0B,IAArBC,EAAoB,EAAvBzB,EAAY0B,EAAW,EAAdzB,EACtBP,EAAOe,SAAQ,SAACJ,GACdA,EAAMmB,IAAI,CAAExB,EAAGyB,EAAMxB,EAAGyB,OAG1BjC,EAAOgB,SAAQ,SAACW,GACdA,EAAGX,SAAQ,SAACG,GACNA,EAAEZ,IAAM2B,SAASF,IAASb,EAAEX,IAAM0B,SAASD,KAC7Cd,EAAEV,KAAOhB,EAAUI,WAKzBuB,KAWAe,kBAlGwB,SAAC,EAAD,GAAmD,IAA7CC,EAA4C,EAA/C7B,EAAY8B,EAAmC,EAAtC7B,EAAgB8B,EAAsB,EAAzB/B,EAAagC,EAAY,EAAf/B,EACvDgC,EAASF,EAAQF,EACjBK,EAASF,EAAQF,EAEjBK,GAAU,OAEQC,IAAlBjC,IACFA,EAAcK,YAAYC,SAAQ,SAACC,KAE9BA,EAAGV,EAAIiC,EAAS,GACfvB,EAAGV,EAAIiC,EAASxC,EAAOuB,OAAS,GAChCN,EAAGT,EAAIiC,EAAS,GAChBxB,EAAGT,EAAIiC,EAASzC,EAAOuB,OAAS,IACjCN,EAAGR,OAAShB,EAAUE,MAAQsB,EAAGR,OAAShB,EAAUC,OAErDgD,GAAU,MAIdzC,EAAOe,SAAQ,SAAC4B,GACVA,IAAelC,GACjBkC,EAAW7B,YAAYC,SAAQ,SAAC6B,GAC9BnC,EAAcK,YAAYC,SAAQ,SAACC,GAE9B4B,EAAIpC,OAAShB,EAAUC,MAAQmD,EAAIpC,OAAShB,EAAUE,MACtDsB,EAAGR,OAAShB,EAAUC,MAAQuB,EAAGR,OAAShB,EAAUE,MAEjDkD,EAAItC,IAAMU,EAAGV,EAAIiC,GAAUK,EAAIrC,IAAMS,EAAGT,EAAIiC,IAC9CC,GAAU,YAOlBA,IACF3B,IAAYC,SAAQ,SAACG,GACnBT,EAAcK,YAAYC,SAAQ,SAACC,GAC7BE,EAAEZ,IAAMU,EAAGV,GAAKY,EAAEX,IAAMS,EAAGT,IAAGW,EAAEV,KAAOhB,EAAUG,mBAIzDc,EAAcoC,KAAKN,EAAQC,GAC3BrB,OAwDJ2B,WApHe,CAAExC,EAAG,EAAGC,EAAG,GAqH1BwC,YAjHkB,SAAC,GAA0B,IACzCC,EADoBb,EAAoB,EAAvB7B,EAAY8B,EAAW,EAAd7B,EAE9BP,EAAOe,SAAQ,SAACJ,GACdA,EAAMG,YAAYC,SAAQ,SAACC,GACrBA,EAAGV,IAAM2B,SAASE,IAASnB,EAAGT,IAAM0B,SAASG,KAC/CY,EAAmBrC,SAIrBqC,IAAqBvC,QAAsCiC,IAArBM,IACxCvC,EAAgBuC,IAwGlBC,iBA9BuB,WACvB,OAAOxC,KC7BIyC,EA1JD,SAAC,GAA4B,IACrC3B,EAAO,CAAEjB,EAD2B,EAAzBA,EACQC,EADiB,EAAfA,GAErB4C,GAAO,EAEPpD,EAAS,CACX,CACE,CAAEO,EAAGiB,EAAKjB,EAAI,EAAGC,EAAGgB,EAAKhB,EAAGC,KAAMhB,EAAUG,aAC5C,CAAEW,EAAGiB,EAAKjB,EAAGC,EAAGgB,EAAKhB,EAAGC,KAAMhB,EAAUC,MACxC,CAAEa,EAAGiB,EAAKjB,EAAI,EAAGC,EAAGgB,EAAKhB,EAAGC,KAAMhB,EAAUG,aAC5C,CAAEW,EAAGiB,EAAKjB,EAAI,EAAGC,EAAGgB,EAAKhB,EAAGC,KAAMhB,EAAUG,cAE9C,CACE,CAAEW,EAAGiB,EAAKjB,EAAI,EAAGC,EAAGgB,EAAKhB,EAAI,EAAGC,KAAMhB,EAAUE,MAChD,CAAEY,EAAGiB,EAAKjB,EAAGC,EAAGgB,EAAKhB,EAAI,EAAGC,KAAMhB,EAAUE,MAC5C,CAAEY,EAAGiB,EAAKjB,EAAI,EAAGC,EAAGgB,EAAKhB,EAAI,EAAGC,KAAMhB,EAAUE,MAChD,CAAEY,EAAGiB,EAAKjB,EAAI,EAAGC,EAAGgB,EAAKhB,EAAI,EAAGC,KAAMhB,EAAUG,cAElD,CACE,CAAEW,EAAGiB,EAAKjB,EAAI,EAAGC,EAAGgB,EAAKhB,EAAI,EAAGC,KAAMhB,EAAUG,aAChD,CAAEW,EAAGiB,EAAKjB,EAAGC,EAAGgB,EAAKhB,EAAI,EAAGC,KAAMhB,EAAUE,MAC5C,CAAEY,EAAGiB,EAAKjB,EAAI,EAAGC,EAAGgB,EAAKhB,EAAI,EAAGC,KAAMhB,EAAUG,aAChD,CAAEW,EAAGiB,EAAKjB,EAAI,EAAGC,EAAGgB,EAAKhB,EAAI,EAAGC,KAAMhB,EAAUG,cAElD,CACE,CAAEW,EAAGiB,EAAKjB,EAAI,EAAGC,EAAGgB,EAAKhB,EAAI,EAAGC,KAAMhB,EAAUE,MAChD,CAAEY,EAAGiB,EAAKjB,EAAGC,EAAGgB,EAAKhB,EAAI,EAAGC,KAAMhB,EAAUE,MAC5C,CAAEY,EAAGiB,EAAKjB,EAAI,EAAGC,EAAGgB,EAAKhB,EAAI,EAAGC,KAAMhB,EAAUE,MAChD,CAAEY,EAAGiB,EAAKjB,EAAI,EAAGC,EAAGgB,EAAKhB,EAAI,EAAGC,KAAMhB,EAAUG,eA4HpD,MAAO,CAAEyD,QAfO,WACd,OAAO7B,GAcST,UAXA,WAChB,IAAIW,EAAY,GAQhB,OANA1B,EAAOgB,SAAQ,SAACW,GACdA,EAAGX,SAAQ,SAACY,GACVF,EAAUpB,KAAKsB,SAIb,GAAN,OAAWF,IAEgBK,IAxHjB,SAAC,GAA0B,IAArBC,EAAoB,EAAvBzB,EAAY0B,EAAW,EAAdzB,EACtB4C,GAAO,EAEP,IAAIE,GAAU,EACVtB,GAAQR,EAAKjB,GAAK0B,GAAQT,EAAKhB,IAAG8C,GAAU,GAEhDtD,EAAOgB,SAAQ,SAACuC,GACdA,EAAUvC,SAAQ,SAACY,GACbA,EAAMrB,GAAKyB,GAAQJ,EAAMpB,GAAKyB,IAChCL,EAAMnB,KAAOhB,EAAUI,KAErByD,GAAW1B,EAAMnB,OAAShB,EAAUG,cACtCgC,EAAMnB,KAAOhB,EAAUI,KAErB+B,EAAMnB,OAAShB,EAAUC,MAAQkC,EAAMnB,OAAShB,EAAUE,OAC5DyD,GAAO,UAyGmBtB,OApGnB,WA4Bb,IA3BA,IAAIJ,EAAY,CACd,CACE,CAAEnB,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,IAEtB,CACE,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,IAEtB,CACE,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,IAEtB,CACE,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,KAIfP,EAAI,EAAGA,EAAIF,EAAOuB,OAAQrB,IACjC,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAOuB,OAAQlB,IACjCqB,EAAUxB,GAAGG,GAAGE,EAAIP,EAAOE,GAAGG,GAAGE,EACjCmB,EAAUxB,GAAGG,GAAGG,EAAIR,EAAOE,GAAGG,GAAGG,EACjCkB,EAAUxB,GAAGG,GAAGI,KAAOT,EAAOA,EAAOuB,OAASlB,EAAI,GAAGH,GAAGO,KACpDiB,EAAUxB,GAAGG,GAAGI,OAAShB,EAAUC,OACrC8B,EAAO,CAAEjB,EAAGmB,EAAUxB,GAAGG,GAAGE,EAAGC,EAAGkB,EAAUxB,GAAGG,GAAGG,IAKxDR,EAAOyB,OAAP,MAAAzB,EAAM,CAAQ,EAAGA,EAAOuB,QAAlB,OAA6BG,KA6DK8B,QAnB1B,WACd,OAAOJ,GAkB0C3D,YAAWqD,KA1DjD,SAACN,EAAQC,GA4BpB,IA3BA,IAAIf,EAAY,CACd,CACE,CAAEnB,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,IAEtB,CACE,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,IAEtB,CACE,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,IAEtB,CACE,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACpB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,KAAM,KAIfP,EAAI,EAAGA,EAAIF,EAAOuB,OAAQrB,IACjC,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAOuB,OAAQlB,IACjCqB,EAAUxB,GAAGG,GAAGE,EAAIP,EAAOE,GAAGG,GAAGE,EAAI2B,SAASM,GAC9Cd,EAAUxB,GAAGG,GAAGG,EAAIR,EAAOE,GAAGG,GAAGG,EAAI0B,SAASO,GAC9Cf,EAAUxB,GAAGG,GAAGI,KAAOT,EAAOE,GAAGG,GAAGI,KAIxCT,EAAOyB,OAAP,MAAAzB,EAAM,CAAQ,EAAGA,EAAOuB,QAAlB,OAA6BG,OChGxB+B,MAnCf,SAAiBC,GACf,IAAIC,EAAY,GACZ/B,EAAQ8B,EAAM9B,MAClB,OAAQ8B,EAAM9B,MAAMnB,MAClB,IAAK,IACHkD,EAAY,cACZ,MACF,IAAK,IACHA,EAAY,gBACZ,MACF,IAAK,IACHA,EAAY,YACZ,MACF,IAAK,IACHA,EAAY,aAMhB,OACE,qBACEC,UAAS,UAAKD,EAAL,YAAkB/B,EAAMrB,EAAxB,YAA6BqB,EAAMpB,GAC5CqD,MAAO,CACLC,OAAQ,qBACRC,OAAQ,MACRC,MAAO,OACPC,OAAQ,QAEVC,SAAQtC,EAAMrB,EACd4D,SAAQvC,EAAMpB,K,gBCrBL4D,EATI,CACjBC,UAAW,EACXC,OAAQ,EACRC,UAAW,EACXC,SAAU,EACVC,QAAS,EACTC,QAAS,GCyJIC,E,kDAvJb,WAAYjB,GAAQ,IAAD,uBACjB,cAAMA,IAiBR/C,SAAW,SAACC,GACV,EAAKgE,UAAUjE,SAASC,IAjBxB,EAAKgE,UAAY7E,IACjB,EAAK8E,MAAQ,CACXC,OAAQV,EAAWC,UACnBU,cAAe,EAAKH,UAAU7D,aAGhC,IAAMiE,EAAS7B,EAAM,CAAE5C,EAAG,EAAGC,EAAG,IAChC,EAAKG,SAASqE,GAEd,IAAMC,EAAS9B,EAAM,CAAE5C,EAAG,EAAGC,EAAG,IAXf,OAYjB,EAAKG,SAASsE,GAEd,EAAKC,OAAS,EACd,EAAKC,WAAa,IAfD,E,uDAsBRC,GACTC,QAAQC,IAAI,SACZC,KAAKX,UAAU7C,IAAI,CACjBxB,EAAG6E,EAAEI,OAAOC,QAAQlF,EACpBC,EAAG4E,EAAEI,OAAOC,QAAQjF,IAEtB+E,KAAKG,SAAS,CAAEX,cAAeQ,KAAKX,UAAU7D,gB,gCAGtCqE,GAENG,KAAKV,MAAMC,SAAWV,EAAWC,WACjCkB,KAAKV,MAAMC,SAAWV,EAAWK,UAEjCc,KAAKG,SAAS,CAAEZ,OAAQV,EAAWE,SACnCiB,KAAKX,UAAU5B,YAAY,CACzBzC,EAAG6E,EAAEI,OAAOC,QAAQlF,EACpBC,EAAG4E,EAAEI,OAAOC,QAAQjF,IAEtB+E,KAAKX,UAAU7B,WAAa,CAC1BxC,EAAG6E,EAAEI,OAAOC,QAAQlF,EACpBC,EAAG4E,EAAEI,OAAOC,QAAQjF,M,iCAKf4E,GAEPG,KAAKV,MAAMC,SAAWV,EAAWE,QACjCiB,KAAKV,MAAMC,SAAWV,EAAWI,WAEN,OAAvBY,EAAEI,OAAOC,QAAQlF,GAAqC,OAAvB6E,EAAEI,OAAOC,QAAQjF,IAClD+E,KAAKG,SAAS,CAAEZ,OAAQV,EAAWG,YAEnCgB,KAAKX,UAAU7B,WAAa,CAC1BxC,EAAG6E,EAAEI,OAAOC,QAAQlF,EACpBC,EAAG4E,EAAEI,OAAOC,QAAQjF,IAGxB+E,KAAKI,iB,iCAIEP,GACT,GAAIG,KAAKV,MAAMC,SAAWV,EAAWG,UAAW,CAC9C,GAA0B,MAAtBa,EAAEI,OAAOC,QAAQlF,GAAmC,MAAtB6E,EAAEI,OAAOC,QAAQjF,EAAW,CAC5D,IAAIoF,EAAQR,EAAEI,OAAOC,QAAQlF,EACzBsF,EAAQT,EAAEI,OAAOC,QAAQjF,EAE7B+E,KAAKX,UAAUzC,kBAAkBoD,KAAKX,UAAU7B,WAAY,CAC1DxC,EAAGqF,EACHpF,EAAGqF,IAIPN,KAAKG,SAAS,CAAEX,cAAeQ,KAAKX,UAAU7D,cAC9CwE,KAAKG,SAAS,CAAEZ,OAAQV,EAAWI,WACnCe,KAAKI,iB,8BAIDP,GACN,GAAIG,KAAKV,MAAMC,SAAWV,EAAWM,QAAS,CAW5C,GAVAa,KAAKL,SACLG,QAAQC,IAAIC,KAAKL,QACjBY,WACE,WACEP,KAAKL,OAAS,EACdG,QAAQC,IAAI,UACZS,KAAKR,MACPA,KAAKJ,YAGa,IAAhBI,KAAKL,OASP,OARAK,KAAKX,UAAU5B,YAAY,CACzBzC,EAAG6E,EAAEI,OAAOC,QAAQlF,EACpBC,EAAG4E,EAAEI,OAAOC,QAAQjF,IAGtB+E,KAAKX,UAAU9C,OAAOyD,KAAKX,UAAU1B,oBACrCqC,KAAKG,SAAS,CAAEX,cAAeQ,KAAKX,UAAU7D,mBAC9CwE,KAAKL,OAAS,GAGhBK,KAAKG,SAAS,CAAEZ,OAAQV,EAAWK,UAEjCc,KAAKV,MAAMC,SAAWV,EAAWM,SAASa,KAAKS,WAAWZ,K,kCAGpDA,GACVC,QAAQC,IAAI,iB,+BAGJ,IAAD,OACP,OACE,8BACE,qBAAK1B,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBACEA,UAAU,YACVC,MAAO,CACLoC,QAAS,OACTC,iBAAkB,mBAClBC,oBAAqB,oBALzB,SAQGZ,KAAKV,MAAME,cAAcqB,KAAI,SAACxE,GAC7B,OACE,qBACEgC,UAAU,MAEVyC,YAAa,EAAKC,UAAUP,KAAK,GACjCQ,aAAc,EAAKC,WAAWT,KAAK,GACnCU,YAAa,EAAKC,WAAWX,KAAK,GAClCY,UAAW,EAAKC,QAAQb,KAAK,GAC7Bc,cAAe,EAAKC,YAAYf,KAAK,GAPvC,SASE,cAAC,EAAD,CAASnE,MAAOA,KAPXmF,sB,GArICC,aCAXC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e2c9ce6f.chunk.js","sourcesContent":["const blockType = {\n  HEAD: \"H\",\n  BODY: \"B\",\n  NOT_DEFINED: \"_\",\n  HIT: \"X\",\n  AIR: \" \",\n};\n\nexport default blockType;\n","import blockType from \"../util/blockType\";\n\nconst Gameboard = () => {\n  const boardSize = 10;\n  let blocks = [];\n  let planes = [];\n\n  for (let i = boardSize - 1; i >= 0; i--) {\n    let row = [];\n    for (let j = 0; j < boardSize; j++) {\n      row.push({ x: j, y: i, type: blockType.NOT_DEFINED });\n    }\n    blocks.push(row);\n  }\n\n  const addPlane = (plane) => {\n    let success = true;\n    let outOfPlane = false;\n    plane.getBlocks().forEach((pb) => {\n      if (\n        pb.x < 0 ||\n        pb.x > boardSize - 1 ||\n        pb.y < 0 ||\n        pb.y > boardSize - 1\n      ) {\n        if (pb.type === blockType.HEAD || pb.type === blockType.BODY) {\n          outOfPlane = true;\n          success = false;\n        }\n      }\n    });\n\n    let collision = false;\n    getBlocks().forEach((b) => {\n      plane.getBlocks().forEach((pb) => {\n        if (b.x === pb.x && b.y === pb.y) {\n          if (\n            (b.type === blockType.HEAD || b.type === blockType.BODY) &&\n            (pb.type === blockType.HEAD || pb.type === blockType.BODY)\n          ) {\n            collision = true;\n            success = false;\n          }\n        }\n      });\n    });\n\n    if (outOfPlane === false && collision === false) {\n      planes.push(plane);\n      updateBoard();\n    }\n\n    return success;\n  };\n\n  const updateBoard = () => {\n    planes.forEach((plane) => {\n      getBlocks().forEach((b) => {\n        plane.getBlocks().forEach((pb) => {\n          if (b.x === pb.x && b.y === pb.y) {\n            if (\n              pb.type === blockType.HEAD ||\n              pb.type === blockType.BODY ||\n              pb.type === blockType.HIT\n            )\n              b.type = pb.type;\n          }\n        });\n      });\n    });\n  };\n\n  const removePlane = (plane) => {\n    planes.forEach((pl) => {\n      if (pl === plane) {\n        getBlocks().forEach((b) => {\n          pl.getBlocks().forEach((pb) => {\n            if (b.x === pb.x && b.y === pb.y) {\n              if (\n                (b.type === blockType.BODY || b.type === blockType.HEAD) &&\n                (pb.type === blockType.BODY || pb.type === blockType.HEAD)\n              ) {\n                pb = null;\n                b.type = blockType.NOT_DEFINED;\n              }\n            }\n          });\n        });\n      }\n    });\n\n    for (let i = 0; i < planes.length; i++) {\n      if (planes[i].head === plane.head) planes.splice(i, 1);\n    }\n  };\n\n  let moveOrigin = { x: 0, y: 0 };\n\n  let selectedPlane;\n\n  const selectPlane = ({ x: xorg, y: yorg }) => {\n    let newSelectedPlane;\n    planes.forEach((plane) => {\n      plane.getBlocks().forEach((pb) => {\n        if (pb.x === parseInt(xorg) && pb.y === parseInt(yorg))\n          newSelectedPlane = plane;\n      });\n    });\n\n    if (newSelectedPlane !== selectedPlane && newSelectedPlane !== undefined)\n      selectedPlane = newSelectedPlane;\n  };\n\n  const moveSelectedPlane = ({ x: xorg, y: yorg }, { x: xdest, y: ydest }) => {\n    let xdelta = xdest - xorg;\n    let ydelta = ydest - yorg;\n\n    let movable = true;\n\n    if (selectedPlane !== undefined) {\n      selectedPlane.getBlocks().forEach((pb) => {\n        if (\n          (pb.x + xdelta < 0 ||\n            pb.x + xdelta > blocks.length - 1 ||\n            pb.y + ydelta < 0 ||\n            pb.y + ydelta > blocks.length - 1) &&\n          (pb.type === blockType.BODY || pb.type === blockType.HEAD)\n        ) {\n          movable = false;\n        }\n      });\n\n      planes.forEach((everyPlane) => {\n        if (everyPlane !== selectedPlane) {\n          everyPlane.getBlocks().forEach((epb) => {\n            selectedPlane.getBlocks().forEach((pb) => {\n              if (\n                (epb.type === blockType.HEAD || epb.type === blockType.BODY) &&\n                (pb.type === blockType.HEAD || pb.type === blockType.BODY)\n              ) {\n                if (epb.x === pb.x + xdelta && epb.y === pb.y + ydelta)\n                  movable = false;\n              }\n            });\n          });\n        }\n      });\n\n      if (movable) {\n        getBlocks().forEach((b) => {\n          selectedPlane.getBlocks().forEach((pb) => {\n            if (b.x === pb.x && b.y === pb.y) b.type = blockType.NOT_DEFINED;\n          });\n        });\n\n        selectedPlane.move(xdelta, ydelta);\n        updateBoard();\n      }\n    }\n  };\n\n  const rotate = (plane) => {\n    removePlane(plane);\n    plane.rotate();\n    let success = addPlane(plane);\n    return success;\n  };\n\n  const getBlocks = () => {\n    let tmpblocks = [];\n\n    blocks.forEach((br) => {\n      br.forEach((block) => {\n        tmpblocks.push(block);\n      });\n    });\n\n    return [...tmpblocks];\n  };\n\n  const getPlanes = () => {\n    return planes;\n  };\n\n  const getSelectedPlane = () => {\n    return selectedPlane;\n  };\n  const hit = ({ x: hitx, y: hity }) => {\n    planes.forEach((plane) => {\n      plane.hit({ x: hitx, y: hity });\n    });\n\n    blocks.forEach((br) => {\n      br.forEach((b) => {\n        if (b.x === parseInt(hitx) && b.y === parseInt(hity)) {\n          b.type = blockType.HIT;\n        }\n      });\n    });\n\n    updateBoard();\n  };\n\n  return {\n    boardSize,\n    getBlocks,\n    addPlane,\n    removePlane,\n    getPlanes,\n    rotate,\n    hit,\n    moveSelectedPlane,\n    moveOrigin,\n    selectPlane,\n    getSelectedPlane,\n  };\n};\n\nexport default Gameboard;\n","import blockType from \"../util/blockType\";\n\nconst Plane = ({ x: headx, y: heady }) => {\n  let head = { x: headx, y: heady };\n  let dead = false;\n\n  let blocks = [\n    [\n      { x: head.x - 1, y: head.y, type: blockType.NOT_DEFINED },\n      { x: head.x, y: head.y, type: blockType.HEAD },\n      { x: head.x + 1, y: head.y, type: blockType.NOT_DEFINED },\n      { x: head.x + 2, y: head.y, type: blockType.NOT_DEFINED },\n    ],\n    [\n      { x: head.x - 1, y: head.y + 1, type: blockType.BODY },\n      { x: head.x, y: head.y + 1, type: blockType.BODY },\n      { x: head.x + 1, y: head.y + 1, type: blockType.BODY },\n      { x: head.x + 2, y: head.y + 1, type: blockType.NOT_DEFINED },\n    ],\n    [\n      { x: head.x - 1, y: head.y + 2, type: blockType.NOT_DEFINED },\n      { x: head.x, y: head.y + 2, type: blockType.BODY },\n      { x: head.x + 1, y: head.y + 2, type: blockType.NOT_DEFINED },\n      { x: head.x + 2, y: head.y + 2, type: blockType.NOT_DEFINED },\n    ],\n    [\n      { x: head.x - 1, y: head.y + 3, type: blockType.BODY },\n      { x: head.x, y: head.y + 3, type: blockType.BODY },\n      { x: head.x + 1, y: head.y + 3, type: blockType.BODY },\n      { x: head.x + 2, y: head.y + 3, type: blockType.NOT_DEFINED },\n    ],\n  ];\n\n  const hit = ({ x: hitx, y: hity }) => {\n    dead = true;\n\n    let headHit = false;\n    if (hitx == head.x && hity == head.y) headHit = true;\n\n    blocks.forEach((blockLine) => {\n      blockLine.forEach((block) => {\n        if (block.x == hitx && block.y == hity) {\n          block.type = blockType.HIT;\n        }\n        if (headHit && block.type !== blockType.NOT_DEFINED)\n          block.type = blockType.HIT;\n\n        if (block.type === blockType.HEAD || block.type === blockType.BODY)\n          dead = false;\n      });\n    });\n  };\n\n  const rotate = () => {\n    let tmpblocks = [\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n    ];\n\n    for (let i = 0; i < blocks.length; i++) {\n      for (let j = 0; j < blocks.length; j++) {\n        tmpblocks[i][j].x = blocks[i][j].x;\n        tmpblocks[i][j].y = blocks[i][j].y;\n        tmpblocks[i][j].type = blocks[blocks.length - j - 1][i].type;\n        if (tmpblocks[i][j].type === blockType.HEAD) {\n          head = { x: tmpblocks[i][j].x, y: tmpblocks[i][j].y };\n        }\n      }\n    }\n\n    blocks.splice(0, blocks.length, ...tmpblocks);\n  };\n\n  const move = (xdelta, ydelta) => {\n    let tmpblocks = [\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n      [\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n        { x: 0, y: 0, type: 0 },\n      ],\n    ];\n\n    for (let i = 0; i < blocks.length; i++) {\n      for (let j = 0; j < blocks.length; j++) {\n        tmpblocks[i][j].x = blocks[i][j].x + parseInt(xdelta);\n        tmpblocks[i][j].y = blocks[i][j].y + parseInt(ydelta);\n        tmpblocks[i][j].type = blocks[i][j].type;\n      }\n    }\n\n    blocks.splice(0, blocks.length, ...tmpblocks);\n  };\n\n  const getDead = () => {\n    return dead;\n  };\n\n  const getHead = () => {\n    return head;\n  };\n\n  const getBlocks = () => {\n    let tmpblocks = [];\n\n    blocks.forEach((br) => {\n      br.forEach((block) => {\n        tmpblocks.push(block);\n      });\n    });\n\n    return [...tmpblocks];\n  };\n  return { getHead, getBlocks, hit, rotate, getDead, blockType, move };\n};\n\nexport default Plane;\n","function BlockUI(props) {\n  let blocktype = \"\";\n  let block = props.block;\n  switch (props.block.type) {\n    case \"H\":\n      blocktype = \"btn-primary\";\n      break;\n    case \"B\":\n      blocktype = \"btn-secondary\";\n      break;\n    case \"_\":\n      blocktype = \"btn-light\";\n      break;\n    case \"X\":\n      blocktype = \"btn-danger\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div\n      className={`${blocktype} ${block.x} ${block.y}`}\n      style={{\n        border: \"1px solid darkgrey\",\n        margin: \"0px\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      data-x={block.x}\n      data-y={block.y}\n    ></div>\n  );\n}\n\nexport default BlockUI;\n","const gameStatus = {\n  selecting: 1,\n  moving: 2,\n  movingout: 3,\n  movingin: 4,\n  dropped: 5,\n  hitting: 6,\n};\n\nexport default gameStatus;\n","import Gameboard from \"../components/Gameboard\";\nimport Plane from \"../components/Plane\";\nimport BlockUI from \"./BlockUI\";\nimport uniqid from \"uniqid\";\nimport { Component } from \"react\";\nimport gameStatus from \"../util/gameStatus\";\n\nclass GameboardUI extends Component {\n  constructor(props) {\n    super(props);\n    this.gameBoard = Gameboard();\n    this.state = {\n      status: gameStatus.selecting,\n      gameBoardGrid: this.gameBoard.getBlocks(),\n    };\n\n    const plane1 = Plane({ x: 2, y: 2 });\n    this.addPlane(plane1);\n\n    const plane2 = Plane({ x: 5, y: 5 });\n    this.addPlane(plane2);\n\n    this.clicks = 0;\n    this.clickdelay = 400;\n  }\n\n  addPlane = (plane) => {\n    this.gameBoard.addPlane(plane);\n  };\n\n  mouseClick(e) {\n    console.log(\"click\");\n    this.gameBoard.hit({\n      x: e.target.dataset.x,\n      y: e.target.dataset.y,\n    });\n    this.setState({ gameBoardGrid: this.gameBoard.getBlocks() });\n  }\n\n  mouseDown(e) {\n    if (\n      this.state.status === gameStatus.selecting ||\n      this.state.status === gameStatus.dropped\n    ) {\n      this.setState({ status: gameStatus.moving });\n      this.gameBoard.selectPlane({\n        x: e.target.dataset.x,\n        y: e.target.dataset.y,\n      });\n      this.gameBoard.moveOrigin = {\n        x: e.target.dataset.x,\n        y: e.target.dataset.y,\n      };\n    }\n  }\n\n  mouseLeave(e) {\n    if (\n      this.state.status === gameStatus.moving ||\n      this.state.status === gameStatus.movingin\n    ) {\n      if (e.target.dataset.x !== null && e.target.dataset.y !== null) {\n        this.setState({ status: gameStatus.movingout });\n\n        this.gameBoard.moveOrigin = {\n          x: e.target.dataset.x,\n          y: e.target.dataset.y,\n        };\n      }\n      this.forceUpdate();\n    }\n  }\n\n  mouseEnter(e) {\n    if (this.state.status === gameStatus.movingout) {\n      if (e.target.dataset.x != null && e.target.dataset.y != null) {\n        let destx = e.target.dataset.x;\n        let desty = e.target.dataset.y;\n\n        this.gameBoard.moveSelectedPlane(this.gameBoard.moveOrigin, {\n          x: destx,\n          y: desty,\n        });\n      }\n\n      this.setState({ gameBoardGrid: this.gameBoard.getBlocks() });\n      this.setState({ status: gameStatus.movingin });\n      this.forceUpdate();\n    }\n  }\n\n  mouseUp(e) {\n    if (this.state.status !== gameStatus.hitting) {\n      this.clicks++;\n      console.log(this.clicks);\n      setTimeout(\n        function () {\n          this.clicks = 0;\n          console.log(\"reset\");\n        }.bind(this),\n        this.clickdelay\n      );\n\n      if (this.clicks === 2) {\n        this.gameBoard.selectPlane({\n          x: e.target.dataset.x,\n          y: e.target.dataset.y,\n        });\n\n        this.gameBoard.rotate(this.gameBoard.getSelectedPlane());\n        this.setState({ gameBoardGrid: this.gameBoard.getBlocks() });\n        this.clicks = 0;\n        return;\n      }\n      this.setState({ status: gameStatus.dropped });\n    }\n    if (this.state.status === gameStatus.hitting) this.mouseClick(e);\n  }\n\n  mouseDouble(e) {\n    console.log(\"doubleclick\");\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"card\">\n            <div\n              className=\"card-body\"\n              style={{\n                display: \"grid\",\n                gridTemplateRows: \"repeat(10, 20px)\",\n                gridTemplateColumns: \"repeat(10, 20px)\",\n              }}\n            >\n              {this.state.gameBoardGrid.map((block) => {\n                return (\n                  <div\n                    className=\"box\"\n                    key={uniqid()}\n                    onMouseDown={this.mouseDown.bind(this)}\n                    onMouseLeave={this.mouseLeave.bind(this)}\n                    onMouseOver={this.mouseEnter.bind(this)}\n                    onMouseUp={this.mouseUp.bind(this)}\n                    onDoubleClick={this.mouseDouble.bind(this)}\n                  >\n                    <BlockUI block={block} />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameboardUI;\n","import \"./App.css\";\nimport GameboardUI from \"./ui/GameboardUI\";\n\nfunction App() {\n  return <GameboardUI></GameboardUI>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}