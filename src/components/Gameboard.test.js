import Gameboard from "./Gameboard";
import Plane from "./Plane";

it("tests gameboard creation", () => {
  const gameBoard = Gameboard();

  expect(gameBoard.getBlocks()).toStrictEqual([
    [
      { x: 0, y: 0, type: 2 },
      { x: 1, y: 0, type: 2 },
      { x: 2, y: 0, type: 2 },
      { x: 3, y: 0, type: 2 },
      { x: 4, y: 0, type: 2 },
      { x: 5, y: 0, type: 2 },
      { x: 6, y: 0, type: 2 },
      { x: 7, y: 0, type: 2 },
      { x: 8, y: 0, type: 2 },
      { x: 9, y: 0, type: 2 },
    ],
    [
      { x: 0, y: 1, type: 2 },
      { x: 1, y: 1, type: 2 },
      { x: 2, y: 1, type: 2 },
      { x: 3, y: 1, type: 2 },
      { x: 4, y: 1, type: 2 },
      { x: 5, y: 1, type: 2 },
      { x: 6, y: 1, type: 2 },
      { x: 7, y: 1, type: 2 },
      { x: 8, y: 1, type: 2 },
      { x: 9, y: 1, type: 2 },
    ],
    [
      { x: 0, y: 2, type: 2 },
      { x: 1, y: 2, type: 2 },
      { x: 2, y: 2, type: 2 },
      { x: 3, y: 2, type: 2 },
      { x: 4, y: 2, type: 2 },
      { x: 5, y: 2, type: 2 },
      { x: 6, y: 2, type: 2 },
      { x: 7, y: 2, type: 2 },
      { x: 8, y: 2, type: 2 },
      { x: 9, y: 2, type: 2 },
    ],
    [
      { x: 0, y: 3, type: 2 },
      { x: 1, y: 3, type: 2 },
      { x: 2, y: 3, type: 2 },
      { x: 3, y: 3, type: 2 },
      { x: 4, y: 3, type: 2 },
      { x: 5, y: 3, type: 2 },
      { x: 6, y: 3, type: 2 },
      { x: 7, y: 3, type: 2 },
      { x: 8, y: 3, type: 2 },
      { x: 9, y: 3, type: 2 },
    ],
    [
      { x: 0, y: 4, type: 2 },
      { x: 1, y: 4, type: 2 },
      { x: 2, y: 4, type: 2 },
      { x: 3, y: 4, type: 2 },
      { x: 4, y: 4, type: 2 },
      { x: 5, y: 4, type: 2 },
      { x: 6, y: 4, type: 2 },
      { x: 7, y: 4, type: 2 },
      { x: 8, y: 4, type: 2 },
      { x: 9, y: 4, type: 2 },
    ],
    [
      { x: 0, y: 5, type: 2 },
      { x: 1, y: 5, type: 2 },
      { x: 2, y: 5, type: 2 },
      { x: 3, y: 5, type: 2 },
      { x: 4, y: 5, type: 2 },
      { x: 5, y: 5, type: 2 },
      { x: 6, y: 5, type: 2 },
      { x: 7, y: 5, type: 2 },
      { x: 8, y: 5, type: 2 },
      { x: 9, y: 5, type: 2 },
    ],
    [
      { x: 0, y: 6, type: 2 },
      { x: 1, y: 6, type: 2 },
      { x: 2, y: 6, type: 2 },
      { x: 3, y: 6, type: 2 },
      { x: 4, y: 6, type: 2 },
      { x: 5, y: 6, type: 2 },
      { x: 6, y: 6, type: 2 },
      { x: 7, y: 6, type: 2 },
      { x: 8, y: 6, type: 2 },
      { x: 9, y: 6, type: 2 },
    ],
    [
      { x: 0, y: 7, type: 2 },
      { x: 1, y: 7, type: 2 },
      { x: 2, y: 7, type: 2 },
      { x: 3, y: 7, type: 2 },
      { x: 4, y: 7, type: 2 },
      { x: 5, y: 7, type: 2 },
      { x: 6, y: 7, type: 2 },
      { x: 7, y: 7, type: 2 },
      { x: 8, y: 7, type: 2 },
      { x: 9, y: 7, type: 2 },
    ],
    [
      { x: 0, y: 8, type: 2 },
      { x: 1, y: 8, type: 2 },
      { x: 2, y: 8, type: 2 },
      { x: 3, y: 8, type: 2 },
      { x: 4, y: 8, type: 2 },
      { x: 5, y: 8, type: 2 },
      { x: 6, y: 8, type: 2 },
      { x: 7, y: 8, type: 2 },
      { x: 8, y: 8, type: 2 },
      { x: 9, y: 8, type: 2 },
    ],
    [
      { x: 0, y: 9, type: 2 },
      { x: 1, y: 9, type: 2 },
      { x: 2, y: 9, type: 2 },
      { x: 3, y: 9, type: 2 },
      { x: 4, y: 9, type: 2 },
      { x: 5, y: 9, type: 2 },
      { x: 6, y: 9, type: 2 },
      { x: 7, y: 9, type: 2 },
      { x: 8, y: 9, type: 2 },
      { x: 9, y: 9, type: 2 },
    ],
  ]);
});

it("gameboard adds a plane", () => {
  const gameBoard = Gameboard();
  const plane = Plane({ x: 5, y: 5 });

  gameBoard.addPlane(plane);

  expect(gameBoard.getBlocks()).toStrictEqual([
    [
      { x: 0, y: 0, type: 2 },
      { x: 1, y: 0, type: 2 },
      { x: 2, y: 0, type: 2 },
      { x: 3, y: 0, type: 2 },
      { x: 4, y: 0, type: 2 },
      { x: 5, y: 0, type: 2 },
      { x: 6, y: 0, type: 2 },
      { x: 7, y: 0, type: 2 },
      { x: 8, y: 0, type: 2 },
      { x: 9, y: 0, type: 2 },
    ],
    [
      { x: 0, y: 1, type: 2 },
      { x: 1, y: 1, type: 2 },
      { x: 2, y: 1, type: 2 },
      { x: 3, y: 1, type: 2 },
      { x: 4, y: 1, type: 2 },
      { x: 5, y: 1, type: 2 },
      { x: 6, y: 1, type: 2 },
      { x: 7, y: 1, type: 2 },
      { x: 8, y: 1, type: 2 },
      { x: 9, y: 1, type: 2 },
    ],
    [
      { x: 0, y: 2, type: 2 },
      { x: 1, y: 2, type: 2 },
      { x: 2, y: 2, type: 2 },
      { x: 3, y: 2, type: 2 },
      { x: 4, y: 2, type: 1 },
      { x: 5, y: 2, type: 1 },
      { x: 6, y: 2, type: 1 },
      { x: 7, y: 2, type: 2 },
      { x: 8, y: 2, type: 2 },
      { x: 9, y: 2, type: 2 },
    ],
    [
      { x: 0, y: 3, type: 2 },
      { x: 1, y: 3, type: 2 },
      { x: 2, y: 3, type: 2 },
      { x: 3, y: 3, type: 2 },
      { x: 4, y: 3, type: 2 },
      { x: 5, y: 3, type: 1 },
      { x: 6, y: 3, type: 2 },
      { x: 7, y: 3, type: 2 },
      { x: 8, y: 3, type: 2 },
      { x: 9, y: 3, type: 2 },
    ],
    [
      { x: 0, y: 4, type: 2 },
      { x: 1, y: 4, type: 2 },
      { x: 2, y: 4, type: 2 },
      { x: 3, y: 4, type: 2 },
      { x: 4, y: 4, type: 1 },
      { x: 5, y: 4, type: 1 },
      { x: 6, y: 4, type: 1 },
      { x: 7, y: 4, type: 2 },
      { x: 8, y: 4, type: 2 },
      { x: 9, y: 4, type: 2 },
    ],
    [
      { x: 0, y: 5, type: 2 },
      { x: 1, y: 5, type: 2 },
      { x: 2, y: 5, type: 2 },
      { x: 3, y: 5, type: 2 },
      { x: 4, y: 5, type: 2 },
      { x: 5, y: 5, type: 0 },
      { x: 6, y: 5, type: 2 },
      { x: 7, y: 5, type: 2 },
      { x: 8, y: 5, type: 2 },
      { x: 9, y: 5, type: 2 },
    ],
    [
      { x: 0, y: 6, type: 2 },
      { x: 1, y: 6, type: 2 },
      { x: 2, y: 6, type: 2 },
      { x: 3, y: 6, type: 2 },
      { x: 4, y: 6, type: 2 },
      { x: 5, y: 6, type: 2 },
      { x: 6, y: 6, type: 2 },
      { x: 7, y: 6, type: 2 },
      { x: 8, y: 6, type: 2 },
      { x: 9, y: 6, type: 2 },
    ],
    [
      { x: 0, y: 7, type: 2 },
      { x: 1, y: 7, type: 2 },
      { x: 2, y: 7, type: 2 },
      { x: 3, y: 7, type: 2 },
      { x: 4, y: 7, type: 2 },
      { x: 5, y: 7, type: 2 },
      { x: 6, y: 7, type: 2 },
      { x: 7, y: 7, type: 2 },
      { x: 8, y: 7, type: 2 },
      { x: 9, y: 7, type: 2 },
    ],
    [
      { x: 0, y: 8, type: 2 },
      { x: 1, y: 8, type: 2 },
      { x: 2, y: 8, type: 2 },
      { x: 3, y: 8, type: 2 },
      { x: 4, y: 8, type: 2 },
      { x: 5, y: 8, type: 2 },
      { x: 6, y: 8, type: 2 },
      { x: 7, y: 8, type: 2 },
      { x: 8, y: 8, type: 2 },
      { x: 9, y: 8, type: 2 },
    ],
    [
      { x: 0, y: 9, type: 2 },
      { x: 1, y: 9, type: 2 },
      { x: 2, y: 9, type: 2 },
      { x: 3, y: 9, type: 2 },
      { x: 4, y: 9, type: 2 },
      { x: 5, y: 9, type: 2 },
      { x: 6, y: 9, type: 2 },
      { x: 7, y: 9, type: 2 },
      { x: 8, y: 9, type: 2 },
      { x: 9, y: 9, type: 2 },
    ],
  ]);
});

it("does not add planes outside of gameboard", () => {
  const gameBoard = Gameboard();

  gameBoard.addPlane(Plane({ x: 1, y: 1 }));
  gameBoard.addPlane(Plane({ x: 5, y: 2 }));
  gameBoard.addPlane(Plane({ x: 9, y: 9 }));
  gameBoard.addPlane(Plane({ x: 9, y: 0 }));

  expect(gameBoard.getBlocks()).toStrictEqual([
    [
      { x: 0, y: 0, type: 2 },
      { x: 1, y: 0, type: 2 },
      { x: 2, y: 0, type: 2 },
      { x: 3, y: 0, type: 2 },
      { x: 4, y: 0, type: 2 },
      { x: 5, y: 0, type: 2 },
      { x: 6, y: 0, type: 2 },
      { x: 7, y: 0, type: 2 },
      { x: 8, y: 0, type: 2 },
      { x: 9, y: 0, type: 2 },
    ],
    [
      { x: 0, y: 1, type: 2 },
      { x: 1, y: 1, type: 2 },
      { x: 2, y: 1, type: 2 },
      { x: 3, y: 1, type: 2 },
      { x: 4, y: 1, type: 2 },
      { x: 5, y: 1, type: 2 },
      { x: 6, y: 1, type: 2 },
      { x: 7, y: 1, type: 2 },
      { x: 8, y: 1, type: 2 },
      { x: 9, y: 1, type: 2 },
    ],
    [
      { x: 0, y: 2, type: 2 },
      { x: 1, y: 2, type: 2 },
      { x: 2, y: 2, type: 2 },
      { x: 3, y: 2, type: 2 },
      { x: 4, y: 2, type: 2 },
      { x: 5, y: 2, type: 2 },
      { x: 6, y: 2, type: 2 },
      { x: 7, y: 2, type: 2 },
      { x: 8, y: 2, type: 2 },
      { x: 9, y: 2, type: 2 },
    ],
    [
      { x: 0, y: 3, type: 2 },
      { x: 1, y: 3, type: 2 },
      { x: 2, y: 3, type: 2 },
      { x: 3, y: 3, type: 2 },
      { x: 4, y: 3, type: 2 },
      { x: 5, y: 3, type: 2 },
      { x: 6, y: 3, type: 2 },
      { x: 7, y: 3, type: 2 },
      { x: 8, y: 3, type: 2 },
      { x: 9, y: 3, type: 2 },
    ],
    [
      { x: 0, y: 4, type: 2 },
      { x: 1, y: 4, type: 2 },
      { x: 2, y: 4, type: 2 },
      { x: 3, y: 4, type: 2 },
      { x: 4, y: 4, type: 2 },
      { x: 5, y: 4, type: 2 },
      { x: 6, y: 4, type: 2 },
      { x: 7, y: 4, type: 2 },
      { x: 8, y: 4, type: 2 },
      { x: 9, y: 4, type: 2 },
    ],
    [
      { x: 0, y: 5, type: 2 },
      { x: 1, y: 5, type: 2 },
      { x: 2, y: 5, type: 2 },
      { x: 3, y: 5, type: 2 },
      { x: 4, y: 5, type: 2 },
      { x: 5, y: 5, type: 2 },
      { x: 6, y: 5, type: 2 },
      { x: 7, y: 5, type: 2 },
      { x: 8, y: 5, type: 2 },
      { x: 9, y: 5, type: 2 },
    ],
    [
      { x: 0, y: 6, type: 2 },
      { x: 1, y: 6, type: 2 },
      { x: 2, y: 6, type: 2 },
      { x: 3, y: 6, type: 2 },
      { x: 4, y: 6, type: 2 },
      { x: 5, y: 6, type: 2 },
      { x: 6, y: 6, type: 2 },
      { x: 7, y: 6, type: 2 },
      { x: 8, y: 6, type: 2 },
      { x: 9, y: 6, type: 2 },
    ],
    [
      { x: 0, y: 7, type: 2 },
      { x: 1, y: 7, type: 2 },
      { x: 2, y: 7, type: 2 },
      { x: 3, y: 7, type: 2 },
      { x: 4, y: 7, type: 2 },
      { x: 5, y: 7, type: 2 },
      { x: 6, y: 7, type: 2 },
      { x: 7, y: 7, type: 2 },
      { x: 8, y: 7, type: 2 },
      { x: 9, y: 7, type: 2 },
    ],
    [
      { x: 0, y: 8, type: 2 },
      { x: 1, y: 8, type: 2 },
      { x: 2, y: 8, type: 2 },
      { x: 3, y: 8, type: 2 },
      { x: 4, y: 8, type: 2 },
      { x: 5, y: 8, type: 2 },
      { x: 6, y: 8, type: 2 },
      { x: 7, y: 8, type: 2 },
      { x: 8, y: 8, type: 2 },
      { x: 9, y: 8, type: 2 },
    ],
    [
      { x: 0, y: 9, type: 2 },
      { x: 1, y: 9, type: 2 },
      { x: 2, y: 9, type: 2 },
      { x: 3, y: 9, type: 2 },
      { x: 4, y: 9, type: 2 },
      { x: 5, y: 9, type: 2 },
      { x: 6, y: 9, type: 2 },
      { x: 7, y: 9, type: 2 },
      { x: 8, y: 9, type: 2 },
      { x: 9, y: 9, type: 2 },
    ],
  ]);
});

it("gameboard does not add collision plane", () => {
  const gameBoard = Gameboard();

  gameBoard.addPlane(Plane({ x: 5, y: 5 }));
  gameBoard.addPlane(Plane({ x: 5, y: 4 }));
  //gameBoard.addPlane(Plane({ x: 7, y: 5 }));

  expect(gameBoard.getBlocks()).toStrictEqual([
    [
      { x: 0, y: 0, type: 2 },
      { x: 1, y: 0, type: 2 },
      { x: 2, y: 0, type: 2 },
      { x: 3, y: 0, type: 2 },
      { x: 4, y: 0, type: 2 },
      { x: 5, y: 0, type: 2 },
      { x: 6, y: 0, type: 2 },
      { x: 7, y: 0, type: 2 },
      { x: 8, y: 0, type: 2 },
      { x: 9, y: 0, type: 2 },
    ],
    [
      { x: 0, y: 1, type: 2 },
      { x: 1, y: 1, type: 2 },
      { x: 2, y: 1, type: 2 },
      { x: 3, y: 1, type: 2 },
      { x: 4, y: 1, type: 2 },
      { x: 5, y: 1, type: 2 },
      { x: 6, y: 1, type: 2 },
      { x: 7, y: 1, type: 2 },
      { x: 8, y: 1, type: 2 },
      { x: 9, y: 1, type: 2 },
    ],
    [
      { x: 0, y: 2, type: 2 },
      { x: 1, y: 2, type: 2 },
      { x: 2, y: 2, type: 2 },
      { x: 3, y: 2, type: 2 },
      { x: 4, y: 2, type: 1 },
      { x: 5, y: 2, type: 1 },
      { x: 6, y: 2, type: 1 },
      { x: 7, y: 2, type: 2 },
      { x: 8, y: 2, type: 2 },
      { x: 9, y: 2, type: 2 },
    ],
    [
      { x: 0, y: 3, type: 2 },
      { x: 1, y: 3, type: 2 },
      { x: 2, y: 3, type: 2 },
      { x: 3, y: 3, type: 2 },
      { x: 4, y: 3, type: 2 },
      { x: 5, y: 3, type: 1 },
      { x: 6, y: 3, type: 2 },
      { x: 7, y: 3, type: 2 },
      { x: 8, y: 3, type: 2 },
      { x: 9, y: 3, type: 2 },
    ],
    [
      { x: 0, y: 4, type: 2 },
      { x: 1, y: 4, type: 2 },
      { x: 2, y: 4, type: 2 },
      { x: 3, y: 4, type: 2 },
      { x: 4, y: 4, type: 1 },
      { x: 5, y: 4, type: 1 },
      { x: 6, y: 4, type: 1 },
      { x: 7, y: 4, type: 2 },
      { x: 8, y: 4, type: 2 },
      { x: 9, y: 4, type: 2 },
    ],
    [
      { x: 0, y: 5, type: 2 },
      { x: 1, y: 5, type: 2 },
      { x: 2, y: 5, type: 2 },
      { x: 3, y: 5, type: 2 },
      { x: 4, y: 5, type: 2 },
      { x: 5, y: 5, type: 0 },
      { x: 6, y: 5, type: 2 },
      { x: 7, y: 5, type: 2 },
      { x: 8, y: 5, type: 2 },
      { x: 9, y: 5, type: 2 },
    ],
    [
      { x: 0, y: 6, type: 2 },
      { x: 1, y: 6, type: 2 },
      { x: 2, y: 6, type: 2 },
      { x: 3, y: 6, type: 2 },
      { x: 4, y: 6, type: 2 },
      { x: 5, y: 6, type: 2 },
      { x: 6, y: 6, type: 2 },
      { x: 7, y: 6, type: 2 },
      { x: 8, y: 6, type: 2 },
      { x: 9, y: 6, type: 2 },
    ],
    [
      { x: 0, y: 7, type: 2 },
      { x: 1, y: 7, type: 2 },
      { x: 2, y: 7, type: 2 },
      { x: 3, y: 7, type: 2 },
      { x: 4, y: 7, type: 2 },
      { x: 5, y: 7, type: 2 },
      { x: 6, y: 7, type: 2 },
      { x: 7, y: 7, type: 2 },
      { x: 8, y: 7, type: 2 },
      { x: 9, y: 7, type: 2 },
    ],
    [
      { x: 0, y: 8, type: 2 },
      { x: 1, y: 8, type: 2 },
      { x: 2, y: 8, type: 2 },
      { x: 3, y: 8, type: 2 },
      { x: 4, y: 8, type: 2 },
      { x: 5, y: 8, type: 2 },
      { x: 6, y: 8, type: 2 },
      { x: 7, y: 8, type: 2 },
      { x: 8, y: 8, type: 2 },
      { x: 9, y: 8, type: 2 },
    ],
    [
      { x: 0, y: 9, type: 2 },
      { x: 1, y: 9, type: 2 },
      { x: 2, y: 9, type: 2 },
      { x: 3, y: 9, type: 2 },
      { x: 4, y: 9, type: 2 },
      { x: 5, y: 9, type: 2 },
      { x: 6, y: 9, type: 2 },
      { x: 7, y: 9, type: 2 },
      { x: 8, y: 9, type: 2 },
      { x: 9, y: 9, type: 2 },
    ],
  ]);
});

it("adds plane object to planes", () => {
  const gameboard = Gameboard();
  const plane = Plane({ x: 5, y: 5 });

  const planes = [];
  planes.push(plane);
  gameboard.addPlane(plane);

  expect(gameboard.getPlanes()).toStrictEqual(planes);
});

it("adds multiple planes object to planes", () => {
  const gameboard = Gameboard();
  const plane1 = Plane({ x: 3, y: 3 });
  const plane2 = Plane({ x: 7, y: 7 });

  const planes = [];
  planes.push(plane1);
  planes.push(plane2);

  gameboard.addPlane(plane1);
  gameboard.addPlane(plane2);

  expect(gameboard.getPlanes()).toStrictEqual(planes);
});
